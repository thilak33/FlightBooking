{"ast":null,"code":"var _jsxFileName = \"/Users/thilakvoruganti/Desktop/FlightBooking/src/context/Flight/index.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlightContent = /*#__PURE__*/createContext();\nconst FlightProvider = props => {\n  _s();\n  const Airports = [{\n    \"name\": \"Kempegowda International Airport\",\n    \"city\": \"Bengaluru\",\n    \"id\": \"BLR\",\n    \"country\": \"India\"\n  }, {\n    \"name\": \"Chennai International Airport\",\n    \"city\": \"Chennai\",\n    \"id\": \"CHE\",\n    \"country\": \"India\"\n  }, {\n    \"name\": \"Indira Gandhi International Airport\",\n    \"city\": \"Delhi\",\n    \"id\": \"DEL\",\n    \"country\": \"India\"\n  }, {\n    \"name\": \"Rajiv Gandhi International Airport\",\n    \"city\": \"Hyderabad\",\n    \"id\": \"HYD\",\n    \"country\": \"India\"\n  }, {\n    \"name\": \"Netaji Subhash Chandra Bose International Airport\",\n    \"city\": \"Kolkata\",\n    \"id\": \"CCU\",\n    \"country\": \"India\"\n  }, {\n    \"name\": \"Chattrapati Shivaji Maharaj International Airport\",\n    \"city\": \"Mumbai\",\n    \"id\": \"BOM\",\n    \"country\": \"India\"\n  }];\n  // Home\n  const [searchdate, setSearchDate] = useState();\n  const [pdinitial, setPdInitial] = useState([{}]);\n  const [passarray, setPassarray] = useState([]);\n  const [searchflights, setSearchFlights] = useState([{\n    'departure': '',\n    'departurecode': '',\n    'departuredisplay': ''\n  }, {\n    'arrival': '',\n    'arrivalcode': '',\n    'arrivaldisplay': ''\n  }, {\n    'tripValue': 'One-way'\n  }, null, {}, {\n    'passengerCount': 1,\n    'adultCount': 1,\n    'childCount': 0,\n    'infantCount': 0,\n    'passengerClass': 'Economy'\n  }]);\n  const updateSearchFlights = (index, value) => {\n    const utf = searchflights.map((c, i) => {\n      if (i === index) {\n        return value;\n      } else {\n        return c;\n      }\n    });\n    setSearchFlights(utf);\n  };\n\n  // const [alert,setAlert] = useState({})\n  // const [invalid, setInvalid] = useState({})\n\n  return /*#__PURE__*/_jsxDEV(FlightContent.Provider, {\n    value: [Airports, searchdate, setSearchDate, searchflights, pdinitial, setPdInitial, passarray, setPassarray, setSearchFlights, updateSearchFlights],\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightProvider, \"YdoXkKOOYjxGzY/RGjb1kRvIDXU=\");\n_c = FlightProvider;\nconst useFlight = () => {\n  _s2();\n  return useContext(FlightContent);\n};\n_s2(useFlight, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { useFlight, FlightProvider };\nvar _c;\n$RefreshReg$(_c, \"FlightProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","FlightContent","FlightProvider","props","Airports","searchdate","setSearchDate","pdinitial","setPdInitial","passarray","setPassarray","searchflights","setSearchFlights","updateSearchFlights","index","value","utf","map","c","i","children","useFlight"],"sources":["/Users/thilakvoruganti/Desktop/FlightBooking/src/context/Flight/index.js"],"sourcesContent":["import React,{ createContext, useContext, useState , useEffect} from 'react'\nimport axios from 'axios'\n\nconst FlightContent = createContext()\n\n\nconst FlightProvider = (props) => {\n\n  const Airports = [\n    {\n        \"name\":\"Kempegowda International Airport\",\n        \"city\":\"Bengaluru\",\n        \"id\":\"BLR\",\n        \"country\":\"India\"\n    },\n    {\n        \"name\":\"Chennai International Airport\",\n        \"city\":\"Chennai\",\n        \"id\":\"CHE\",\n        \"country\":\"India\"\n    },\n    {\n        \"name\":\"Indira Gandhi International Airport\",\n        \"city\":\"Delhi\",\n        \"id\":\"DEL\",\n        \"country\":\"India\"\n    },\n    {\n        \"name\":\"Rajiv Gandhi International Airport\",\n        \"city\":\"Hyderabad\",\n        \"id\":\"HYD\",\n        \"country\":\"India\"\n    },\n    {\n        \"name\":\"Netaji Subhash Chandra Bose International Airport\",\n        \"city\":\"Kolkata\",\n        \"id\":\"CCU\",\n        \"country\":\"India\"\n    },\n    {\n        \"name\":\"Chattrapati Shivaji Maharaj International Airport\",\n        \"city\":\"Mumbai\",\n        \"id\":\"BOM\",\n        \"country\":\"India\"\n    }\n\n]\n // Home\n const [searchdate, setSearchDate] = useState()\n const [pdinitial,setPdInitial] = useState([{}])\n const[passarray,setPassarray] = useState([])\n\n const[searchflights, setSearchFlights] = useState([\n  {'departure':'','departurecode':'','departuredisplay':''},\n  {'arrival':'','arrivalcode':'','arrivaldisplay':''},\n  {'tripValue':'One-way'},\n  null,\n  {},\n  {\n      'passengerCount':1,\n      'adultCount':1,\n      'childCount':0,\n      'infantCount':0,\n      'passengerClass':'Economy'\n  },\n])\n\nconst updateSearchFlights = (index, value) => {\n  const utf = searchflights.map((c, i) => {\n      if (i === index) {\n        return value ;\n      } else {\n        return c;\n      }\n  });\n  setSearchFlights(utf);\n}\n\n  // const [alert,setAlert] = useState({})\n  // const [invalid, setInvalid] = useState({})\n\n\n  return (\n    <FlightContent.Provider \n        value={[Airports ,searchdate, setSearchDate,searchflights,pdinitial,setPdInitial,passarray,setPassarray,\n                setSearchFlights, updateSearchFlights ]}>\n        {props.children}\n    </FlightContent.Provider>\n  )\n}\n\nconst useFlight = () => useContext(FlightContent)\n\nexport { useFlight, FlightProvider}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}