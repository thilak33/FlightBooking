{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _react = require(\"react\");\nvar _isPlainObject = _interopRequireDefault(require(\"./helpers/isPlainObject\"));\nvar _wrapValidator = _interopRequireDefault(require(\"./helpers/wrapValidator\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nvar isPrototypeOf = Object.prototype.isPrototypeOf;\nfunction isNewRef(prop) {\n  if (!(0, _isPlainObject[\"default\"])(prop)) {\n    return false;\n  }\n  var ownProperties = Object.keys(prop);\n  return ownProperties.length === 1 && ownProperties[0] === 'current';\n}\nfunction isCallbackRef(prop) {\n  return typeof prop === 'function' && !isPrototypeOf.call(_react.Component, prop) && (!_react.PureComponent || !isPrototypeOf.call(_react.PureComponent, prop));\n}\nfunction requiredRef(props, propName, componentName) {\n  var propValue = props[propName];\n  if (isCallbackRef(propValue) || isNewRef(propValue)) {\n    return null;\n  }\n  return new TypeError(\"\".concat(propName, \" in \").concat(componentName, \" must be a ref\"));\n}\nfunction ref(props, propName, componentName) {\n  var propValue = props[propName];\n  if (propValue == null) {\n    return null;\n  }\n  for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    rest[_key - 3] = arguments[_key];\n  }\n  return requiredRef.apply(void 0, [props, propName, componentName].concat(rest));\n}\nref.isRequired = requiredRef;\nvar _default = function _default() {\n  return (0, _wrapValidator[\"default\"])(ref, 'ref');\n};\nexports[\"default\"] = _default;","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;;;;;;IAEQA,a,GAAkBC,MAAM,CAACC,S,CAAzBF,a;AAER,SAASG,QAAT,CAAkBC,IAAlB,EAAwB;EACtB,IAAI,CAAC,+BAAcA,IAAd,CAAL,EAA0B;IACxB,OAAO,KAAP;EACD;EACD,IAAMC,aAAa,GAAGJ,MAAM,CAACK,IAAP,CAAYF,IAAZ,CAAtB;EACA,OAAOC,aAAa,CAACE,MAAd,KAAyB,CAAzB,IAA8BF,aAAa,CAAC,CAAD,CAAb,KAAqB,SAA1D;AACD;AAED,SAASG,aAAT,CAAuBJ,IAAvB,EAA6B;EAC3B,OAAO,OAAOA,IAAP,KAAgB,UAAhB,IACF,CAACJ,aAAa,CAACS,IAAd,CAAmBC,gBAAnB,EAA8BN,IAA9B,CADC,KAED,CAACO,oBAAD,IAAkB,CAACX,aAAa,CAACS,IAAd,CAAmBE,oBAAnB,EAAkCP,IAAlC,CAFlB,CAAP;AAGD;AAED,SAASQ,WAAT,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsCC,aAAtC,EAAqD;EACnD,IAAMC,SAAS,GAAGH,KAAK,CAACC,QAAD,CAAvB;EAEA,IAAIN,aAAa,CAACQ,SAAD,CAAb,IAA4Bb,QAAQ,CAACa,SAAD,CAAxC,EAAqD;IACnD,OAAO,IAAP;EACD;EAED,OAAO,IAAIC,SAAJ,WAAiBH,QAAjB,iBAAgCC,aAAhC,oBAAP;AACD;AAED,SAASG,GAAT,CAAaL,KAAb,EAAoBC,QAApB,EAA8BC,aAA9B,EAAsD;EACpD,IAAMC,SAAS,GAAGH,KAAK,CAACC,QAAD,CAAvB;EAEA,IAAIE,SAAS,IAAI,IAAjB,EAAuB;IACrB,OAAO,IAAP;EACD;EALmD,kCAANG,IAAM;IAANA,IAAM;EAAA;EAOpD,OAAOP,WAAW,MAAX,UAAYC,KAAZ,EAAmBC,QAAnB,EAA6BC,aAA7B,SAA+CI,IAA/C,EAAP;AACD;AAEDD,GAAG,CAACE,UAAJ,GAAiBR,WAAjB;eAEe;EAAA,OAAM,+BAAcM,GAAd,EAAmB,KAAnB,CAAN;AAAA,C","names":["isPrototypeOf","Object","prototype","isNewRef","prop","ownProperties","keys","length","isCallbackRef","call","Component","PureComponent","requiredRef","props","propName","componentName","propValue","TypeError","ref","rest","isRequired"],"sources":["/Users/thilakvoruganti/Desktop/watch/node_modules/airbnb-prop-types/src/ref.js"],"sourcesContent":["import { Component, PureComponent } from 'react';\nimport isPlainObject from './helpers/isPlainObject';\nimport wrapValidator from './helpers/wrapValidator';\n\nconst { isPrototypeOf } = Object.prototype;\n\nfunction isNewRef(prop) {\n  if (!isPlainObject(prop)) {\n    return false;\n  }\n  const ownProperties = Object.keys(prop);\n  return ownProperties.length === 1 && ownProperties[0] === 'current';\n}\n\nfunction isCallbackRef(prop) {\n  return typeof prop === 'function'\n    && !isPrototypeOf.call(Component, prop)\n    && (!PureComponent || !isPrototypeOf.call(PureComponent, prop));\n}\n\nfunction requiredRef(props, propName, componentName) {\n  const propValue = props[propName];\n\n  if (isCallbackRef(propValue) || isNewRef(propValue)) {\n    return null;\n  }\n\n  return new TypeError(`${propName} in ${componentName} must be a ref`);\n}\n\nfunction ref(props, propName, componentName, ...rest) {\n  const propValue = props[propName];\n\n  if (propValue == null) {\n    return null;\n  }\n\n  return requiredRef(props, propName, componentName, ...rest);\n}\n\nref.isRequired = requiredRef;\n\nexport default () => wrapValidator(ref, 'ref');\n"]},"metadata":{},"sourceType":"script"}