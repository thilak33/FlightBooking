{"ast":null,"code":"var _jsxFileName = \"/Users/thilakvoruganti/Desktop/FlightBooking/src/context/Flight/index.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport * as moment from 'moment';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlightContent = /*#__PURE__*/createContext();\nconst FlightProvider = props => {\n  _s();\n  const Airports = [{\n    \"name\": \"Kempegowda International Airport\",\n    \"city\": \"Bengaluru\",\n    \"id\": \"BLR\",\n    \"country\": \"India\"\n  }, {\n    \"name\": \"Chennai International Airport\",\n    \"city\": \"Chennai\",\n    \"id\": \"CHE\",\n    \"country\": \"India\"\n  }, {\n    \"name\": \"Indira Gandhi International Airport\",\n    \"city\": \"Delhi\",\n    \"id\": \"DEL\",\n    \"country\": \"India\"\n  }, {\n    \"name\": \"Rajiv Gandhi International Airport\",\n    \"city\": \"Hyderabad\",\n    \"id\": \"HYD\",\n    \"country\": \"India\"\n  }, {\n    \"name\": \"Netaji Subhash Chandra Bose International Airport\",\n    \"city\": \"Kolkata\",\n    \"id\": \"CCU\",\n    \"country\": \"India\"\n  }, {\n    \"name\": \"Chattrapati Shivaji Maharaj International Airport\",\n    \"city\": \"Mumbai\",\n    \"id\": \"BOM\",\n    \"country\": \"India\"\n  }];\n  // Home\n  //  const [search,setSearch] = useState('')\n  //  const [pdinitial,setPdInitial] = useState([{}])\n  //  const[passarray,setPassarray] = useState([])\n\n  const [searchflights, setSearchFlights] = useState([{\n    'departure': '',\n    'departurecode': ''\n  }, {\n    'arrival': '',\n    'arrivalcode': ''\n  }, {\n    'tripValue': 'One-way'\n  }, null, {}, {\n    'passengerCount': 1,\n    'adultCount': 1,\n    'childCount': 0,\n    'infantCount': 0,\n    'passengerClass': 'Economy'\n  }, {\n    'departuredate': null,\n    'destinationdate': null\n  }]);\n  const updateSearchFlights = (index, value) => {\n    const utf = searchflights.map((c, i) => {\n      if (i === index) {\n        return value;\n      } else {\n        return c;\n      }\n    });\n    setSearchFlights(utf);\n  };\n  useEffect(() => {\n    let data = JSON.parse(localStorage.getItem('searchedData'));\n    if (data) {\n      // setSearchFlights([...data,[...data,data[2].tripValue ==='Return'?data[4]=moment(data[4]):data[3]=moment(data[3])]])\n      setSearchFlights(data[2].tripValue === 'Return' ? [...data.slice(0, 4), moment(data[4]), ...data.slice(4, data.length + 1)] : [...data.slice(0, 3), moment(data[3]), ...data.slice(3, data.length + 1)]);\n      console.log(searchflights);\n    }\n  }, []);\n  const [searchdate, setSearchDate] = useState();\n\n  // const [condition, setCondition] = useState(0)\n  // const [alert,setAlert] = useState({})\n  // const [invalid, setInvalid] = useState({})\n\n  // return (\n  //   <FlightContent.Provider \n  //       value={[Airports ,searchdate, setSearchDate,search,setSearch,searchflights,pdinitial,setPdInitial,passarray,setPassarray,\n  //               setSearchFlights, updateSearchFlights,condition, setCondition ]}>\n  //       {props.children}\n  //   </FlightContent.Provider>\n  // )\n  return /*#__PURE__*/_jsxDEV(FlightContent.Provider, {\n    value: [Airports, searchflights, updateSearchFlights, searchdate, setSearchDate],\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightProvider, \"czAwuOVYbn1Z4PbVhucIg9zHcFI=\");\n_c = FlightProvider;\nconst useFlight = () => {\n  _s2();\n  return useContext(FlightContent);\n};\n_s2(useFlight, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { useFlight, FlightProvider };\nvar _c;\n$RefreshReg$(_c, \"FlightProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","moment","axios","FlightContent","FlightProvider","props","Airports","searchflights","setSearchFlights","updateSearchFlights","index","value","utf","map","c","i","data","JSON","parse","localStorage","getItem","tripValue","slice","length","console","log","searchdate","setSearchDate","children","useFlight"],"sources":["/Users/thilakvoruganti/Desktop/FlightBooking/src/context/Flight/index.js"],"sourcesContent":["import React,{ createContext, useContext, useState , useEffect} from 'react'\nimport * as moment from 'moment';\nimport axios from 'axios'\n\nconst FlightContent = createContext()\n\n\nconst FlightProvider = (props) => {\n\n  const Airports = [\n    {\n        \"name\":\"Kempegowda International Airport\",\n        \"city\":\"Bengaluru\",\n        \"id\":\"BLR\",\n        \"country\":\"India\"\n    },\n    {\n        \"name\":\"Chennai International Airport\",\n        \"city\":\"Chennai\",\n        \"id\":\"CHE\",\n        \"country\":\"India\"\n    },\n    {\n        \"name\":\"Indira Gandhi International Airport\",\n        \"city\":\"Delhi\",\n        \"id\":\"DEL\",\n        \"country\":\"India\"\n    },\n    {\n        \"name\":\"Rajiv Gandhi International Airport\",\n        \"city\":\"Hyderabad\",\n        \"id\":\"HYD\",\n        \"country\":\"India\"\n    },\n    {\n        \"name\":\"Netaji Subhash Chandra Bose International Airport\",\n        \"city\":\"Kolkata\",\n        \"id\":\"CCU\",\n        \"country\":\"India\"\n    },\n    {\n        \"name\":\"Chattrapati Shivaji Maharaj International Airport\",\n        \"city\":\"Mumbai\",\n        \"id\":\"BOM\",\n        \"country\":\"India\"\n    }\n\n]\n // Home\n//  const [search,setSearch] = useState('')\n//  const [pdinitial,setPdInitial] = useState([{}])\n//  const[passarray,setPassarray] = useState([])\n\n\n const[searchflights, setSearchFlights] = useState([\n  {\n    'departure':'',\n    'departurecode':''\n  },\n  {\n    'arrival':'',\n    'arrivalcode':''\n  },\n  {\n    'tripValue':'One-way'\n  },\n  null,\n  {},\n  {\n      'passengerCount':1,\n      'adultCount':1,\n      'childCount':0,\n      'infantCount':0,\n      'passengerClass':'Economy'\n  },\n  {\n    'departuredate':null,\n    'destinationdate':null\n  }\n])\n\nconst updateSearchFlights = (index, value) => {\n  const utf = searchflights.map((c, i) => {\n      if (i === index) {\n        return value ;\n      } else {\n        return c;\n      }\n  });\n  setSearchFlights(utf);\n}\nuseEffect(()=>{\n \n  let data = JSON.parse(localStorage.getItem('searchedData'))\n  if(data){\n    // setSearchFlights([...data,[...data,data[2].tripValue ==='Return'?data[4]=moment(data[4]):data[3]=moment(data[3])]])\n    setSearchFlights(data[2].tripValue==='Return'?[...data.slice(0,4),moment(data[4]),...data.slice(4,data.length+1)]:[...data.slice(0,3),moment(data[3]),...data.slice(3,data.length+1)])\n    console.log(searchflights)\n  }\n  \n\n},[])\n\n const [searchdate, setSearchDate] = useState()\n\n// const [condition, setCondition] = useState(0)\n  // const [alert,setAlert] = useState({})\n  // const [invalid, setInvalid] = useState({})\n\n\n  // return (\n  //   <FlightContent.Provider \n  //       value={[Airports ,searchdate, setSearchDate,search,setSearch,searchflights,pdinitial,setPdInitial,passarray,setPassarray,\n  //               setSearchFlights, updateSearchFlights,condition, setCondition ]}>\n  //       {props.children}\n  //   </FlightContent.Provider>\n  // )\n  return (\n    <FlightContent.Provider value={[Airports ,searchflights, updateSearchFlights, searchdate, setSearchDate ]}>\n        {props.children}\n    </FlightContent.Provider>\n  )\n}\n\nconst useFlight = () => useContext(FlightContent)\n\nexport { useFlight, FlightProvider}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}