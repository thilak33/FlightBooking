{"ast":null,"code":"var _jsxFileName = \"/Users/thilakvoruganti/Desktop/FlightBooking/src/pages/OnewaySearch.js\";\n// import React,{useState,useContext,useEffect} from 'react'\n// import Flightitem from \"../components/Flightitem\";\n// import flightContent from \"../context/FlightContext\";\n// import '../styles/Search.css'\n// import { useNavigate, useParams } from 'react-router-dom';\n// import * as moment from 'moment';\n\n// const OnewaySearch = () => {\n//     const content = useContext(flightContent)\n//     const { flights, getFlights, setFlights, searchdate,\n//             setSearch, searchflights, setSearchFlights,setSearchDate,updateSearchFlights,historyobject,setHistoryobject\n//           } = content \n//     const navigate = useNavigate()\n//     const params = useParams()\n//     useEffect(() => {\n//         setSearch('true')\n//         setSearchDate(localStorage.getItem('searchdate'))\n//         setSearchFlights(JSON.parse(localStorage.getItem('searchflights')))\n//         let sf =  JSON.parse(localStorage.getItem('searchflights'))\n//         const searchquery = params.slug.split('&')\n//         const controller = new AbortController();\n//         const signal = controller.signal;\n//         if(searchquery[0] && searchquery[1]){\n//             getFlights(searchquery[0],searchquery[1],sf[5].passengerClass.toLowerCase(),signal)\n//             .then((data)=>{setFlights(data.flights)})\n//             .catch(err=>{\n//                 if(err.name === \"AbortError\"){\n//                 console.log('aborted')\n//                 }\n//             })\n//         }\n//         return () => {\n//             controller.abort();\n//         }\n//     }, [])\n\n//     const [isOSBackButtonClicked, setIsOSBackButtonClicked] = useState(false)\n//     const navigateToHome = (e) => {\n//       e.preventDefault();\n//       if(!isOSBackButtonClicked){\n//             let sf = JSON.parse(localStorage.getItem('searchflights'))\n//             if(sf[2].tripValue === 'One-way'){\n//                 updateSearchFlights(3,moment(sf[3]))\n//                 setIsOSBackButtonClicked(true)\n//                 navigate('/')\n//             }\n//                 if(sf[2].tripValue === 'Return'){\n//                 let startDate = moment(sf[4].startDate)\n//                 let endDate = moment(sf[4].endDate)\n//                 updateSearchFlights(4,{startDate,endDate})\n//                 setIsOSBackButtonClicked(true)\n//                 navigate('/')\n//             }   \n//             navigate('/')\n//       }\n//     }\n//     useEffect(() => {\n//         // setHistoryobject(...historyobject,window.location.pathname)\n//         window.history.pushState(historyobject, null, window.location.pathname);\n//         window.addEventListener('popstate', navigateToHome);\n//       });\n\n//   return (\n//     <div className=\"flight-item-con\">\n//         <div>{searchflights[2].tripValue === 'Return'?searchdate.slice(0,11):searchdate}</div>\n//         <div className='flight-item-title'>\n//             Select your departure flight\n//             <div>from <span>{searchflights[0].departure}</span> to <span>{searchflights[1].arrival}</span></div> \n//         </div>\n//         {flights.map((flight) => {\n//             return <Flightitem key={flight._id} flight={flight}/>\n//         })}\n//     </div>\n//   )\n// }\n\n// export default OnewaySearch\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OnewaySearch = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"OnewaySearch\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_c = OnewaySearch;\nexport default OnewaySearch;\nvar _c;\n$RefreshReg$(_c, \"OnewaySearch\");","map":{"version":3,"names":["React","OnewaySearch"],"sources":["/Users/thilakvoruganti/Desktop/FlightBooking/src/pages/OnewaySearch.js"],"sourcesContent":["// import React,{useState,useContext,useEffect} from 'react'\n// import Flightitem from \"../components/Flightitem\";\n// import flightContent from \"../context/FlightContext\";\n// import '../styles/Search.css'\n// import { useNavigate, useParams } from 'react-router-dom';\n// import * as moment from 'moment';\n\n\n\n// const OnewaySearch = () => {\n//     const content = useContext(flightContent)\n//     const { flights, getFlights, setFlights, searchdate,\n//             setSearch, searchflights, setSearchFlights,setSearchDate,updateSearchFlights,historyobject,setHistoryobject\n//           } = content \n//     const navigate = useNavigate()\n//     const params = useParams()\n//     useEffect(() => {\n//         setSearch('true')\n//         setSearchDate(localStorage.getItem('searchdate'))\n//         setSearchFlights(JSON.parse(localStorage.getItem('searchflights')))\n//         let sf =  JSON.parse(localStorage.getItem('searchflights'))\n//         const searchquery = params.slug.split('&')\n//         const controller = new AbortController();\n//         const signal = controller.signal;\n//         if(searchquery[0] && searchquery[1]){\n//             getFlights(searchquery[0],searchquery[1],sf[5].passengerClass.toLowerCase(),signal)\n//             .then((data)=>{setFlights(data.flights)})\n//             .catch(err=>{\n//                 if(err.name === \"AbortError\"){\n//                 console.log('aborted')\n//                 }\n//             })\n//         }\n//         return () => {\n//             controller.abort();\n//         }\n//     }, [])\n\n//     const [isOSBackButtonClicked, setIsOSBackButtonClicked] = useState(false)\n//     const navigateToHome = (e) => {\n//       e.preventDefault();\n//       if(!isOSBackButtonClicked){\n//             let sf = JSON.parse(localStorage.getItem('searchflights'))\n//             if(sf[2].tripValue === 'One-way'){\n//                 updateSearchFlights(3,moment(sf[3]))\n//                 setIsOSBackButtonClicked(true)\n//                 navigate('/')\n//             }\n//                 if(sf[2].tripValue === 'Return'){\n//                 let startDate = moment(sf[4].startDate)\n//                 let endDate = moment(sf[4].endDate)\n//                 updateSearchFlights(4,{startDate,endDate})\n//                 setIsOSBackButtonClicked(true)\n//                 navigate('/')\n//             }   \n//             navigate('/')\n//       }\n//     }\n//     useEffect(() => {\n//         // setHistoryobject(...historyobject,window.location.pathname)\n//         window.history.pushState(historyobject, null, window.location.pathname);\n//         window.addEventListener('popstate', navigateToHome);\n//       });\n\n//   return (\n//     <div className=\"flight-item-con\">\n//         <div>{searchflights[2].tripValue === 'Return'?searchdate.slice(0,11):searchdate}</div>\n//         <div className='flight-item-title'>\n//             Select your departure flight\n//             <div>from <span>{searchflights[0].departure}</span> to <span>{searchflights[1].arrival}</span></div> \n//         </div>\n//         {flights.map((flight) => {\n//             return <Flightitem key={flight._id} flight={flight}/>\n//         })}\n//     </div>\n//   )\n// }\n\n// export default OnewaySearch\n\n\nimport React from 'react'\n\nconst OnewaySearch = () => {\n  return (\n    <div>OnewaySearch</div>\n  )\n}\nexport default OnewaySearch"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAEzB,MAAMC,YAAY,GAAG,MAAM;EACzB,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAuB;AAE3B,CAAC;AAAA,KAJKA,YAAY;AAKlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}