{"ast":null,"code":"var _jsxFileName = \"/Users/thilakvoruganti/Desktop/FlightBooking/src/components/Input.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Components.css';\nimport Alert from './Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Input = _ref => {\n  _s();\n  let {\n    className,\n    placeholder,\n    onChange,\n    value,\n    type,\n    name,\n    id,\n    validation\n  } = _ref;\n  const [alert, setAlert] = useState({\n    \"email\": \"\",\n    \"password\": \"\",\n    \"cpassword\": \"\",\n    \"mobilenumber\": \"\",\n    \"firstname\": \"\",\n    \"lastname\": \"\",\n    \"dateofbirth\": \"\",\n    \"gender\": \"\",\n    \"state\": \"\"\n  });\n  const [invalid, setInvalid] = useState({});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-floating\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: `${className} form-control ${invalid}`,\n        placeholder: placeholder,\n        onChange: onChange,\n        value: value,\n        type: type,\n        name: name,\n        id: id,\n        onBlur: () => {\n          if (name !== 'cpassword') {\n            var pattern = new RegExp(validation);\n            let regex = pattern.test(value);\n            setAlert({\n              ...alert,\n              [name]: regex\n            });\n            setInvalid({\n              ...invalid,\n              [name]: regex ? '' : 'is-invalid'\n            });\n          }\n          console.log(alert, invalid);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label-primary\",\n        htmlFor: id,\n        children: placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), alert + '.' + name === false ? /*#__PURE__*/_jsxDEV(Alert, {\n      error: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 41\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Input, \"0kKURrv1+x16QP27l/iDd8CWRNw=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useState","Alert","Input","className","placeholder","onChange","value","type","name","id","validation","alert","setAlert","invalid","setInvalid","pattern","RegExp","regex","test","console","log"],"sources":["/Users/thilakvoruganti/Desktop/FlightBooking/src/components/Input.js"],"sourcesContent":["import React,{useState} from 'react'\nimport '../styles/Components.css'\nimport Alert from './Alert'\n\n\nconst Input = ({className,placeholder,onChange, value, type, name, id, validation}) => {\n\n    const [alert, setAlert] = useState({\n        \"email\": \"\", \n        \"password\": \"\",\n        \"cpassword\": \"\",\n        \"mobilenumber\": \"\",\n        \"firstname\": \"\",\n        \"lastname\": \"\",\n        \"dateofbirth\": \"\",\n        \"gender\": \"\",\n        \"state\": \"\"\n    })\n    const [invalid, setInvalid] = useState({})\n\n\n    return (\n        <div>\n            <div className=\"form-floating\">\n                <input \n                    className={`${className} form-control ${invalid}`}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    value={value}\n                    type={type}\n                    name={name}\n                    id={id}\n                    onBlur={() => {\n                            if(name !== 'cpassword'){\n                                var pattern = new RegExp(validation);\n                                let regex = pattern.test(value)\n                                setAlert({...alert,[name]:regex})\n                                setInvalid({...invalid,[name]:regex ? '' : 'is-invalid'})\n                            }\n                            console.log(alert,invalid)\n                        }\n                    }\n                />\n                <label className='input-label-primary' htmlFor={id}>{placeholder}</label>\n            </div>\n            {alert+'.'+name === false ? <Alert error={placeholder} /> : <></>}\n        </div>\n    )\n}\n\nexport default Input"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAO,0BAA0B;AACjC,OAAOC,KAAK,MAAM,SAAS;AAAA;AAAA;AAG3B,MAAMC,KAAK,GAAG,QAAyE;EAAA;EAAA,IAAxE;IAACC,SAAS;IAACC,WAAW;IAACC,QAAQ;IAAEC,KAAK;IAAEC,IAAI;IAAEC,IAAI;IAAEC,EAAE;IAAEC;EAAU,CAAC;EAE9E,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC;IAC/B,OAAO,EAAE,EAAE;IACX,UAAU,EAAE,EAAE;IACd,WAAW,EAAE,EAAE;IACf,cAAc,EAAE,EAAE;IAClB,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,EAAE;IACd,aAAa,EAAE,EAAE;IACjB,QAAQ,EAAE,EAAE;IACZ,OAAO,EAAE;EACb,CAAC,CAAC;EACF,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EAG1C,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,eAAe;MAAA,wBAC1B;QACI,SAAS,EAAG,GAAEG,SAAU,iBAAgBU,OAAQ,EAAE;QAClD,WAAW,EAAET,WAAY;QACzB,QAAQ,EAAEC,QAAS;QACnB,KAAK,EAAEC,KAAM;QACb,IAAI,EAAEC,IAAK;QACX,IAAI,EAAEC,IAAK;QACX,EAAE,EAAEC,EAAG;QACP,MAAM,EAAE,MAAM;UACN,IAAGD,IAAI,KAAK,WAAW,EAAC;YACpB,IAAIO,OAAO,GAAG,IAAIC,MAAM,CAACN,UAAU,CAAC;YACpC,IAAIO,KAAK,GAAGF,OAAO,CAACG,IAAI,CAACZ,KAAK,CAAC;YAC/BM,QAAQ,CAAC;cAAC,GAAGD,KAAK;cAAC,CAACH,IAAI,GAAES;YAAK,CAAC,CAAC;YACjCH,UAAU,CAAC;cAAC,GAAGD,OAAO;cAAC,CAACL,IAAI,GAAES,KAAK,GAAG,EAAE,GAAG;YAAY,CAAC,CAAC;UAC7D;UACAE,OAAO,CAACC,GAAG,CAACT,KAAK,EAACE,OAAO,CAAC;QAC9B;MACH;QAAA;QAAA;QAAA;MAAA,QACH,eACF;QAAO,SAAS,EAAC,qBAAqB;QAAC,OAAO,EAAEJ,EAAG;QAAA,UAAEL;MAAW;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACvE,EACLO,KAAK,GAAC,GAAG,GAACH,IAAI,KAAK,KAAK,gBAAG,QAAC,KAAK;MAAC,KAAK,EAAEJ;IAAY;MAAA;MAAA;MAAA;IAAA,QAAG,gBAAG,qCAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/D;AAEd,CAAC;AAAA,GA3CKF,KAAK;AAAA,KAALA,KAAK;AA6CX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module"}