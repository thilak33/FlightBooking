{"ast":null,"code":"var _jsxFileName = \"/Users/thilakvoruganti/Desktop/FlightBooking/src/pages/Passengerdetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Passengerdetails.css';\n// import Alert from '../components/Alert';\nimport { useNavigate } from 'react-router-dom';\nimport { useFlight } from '../context/Flight';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Passengerdetails = () => {\n  _s();\n  const {\n    searchflights,\n    tripFlights\n  } = useFlight();\n\n  // let navigate = useNavigate()\n  // const content = useContext(flightContent)\n  // const { personaldetails, setPersonaldetials, contactdetails, setContactdetails,\n  //     tripFlights, localpassengers, localpassenger, setLocalPassenger,\n  //     getPassengers, passarray, setPassarray, updatePassengerDetails,\n  //     searchflights, setSearchFlights,  setLocalPassengers, primarypassenger, setPrimarypassenger,\n  //     setPwcd, setTripFlights,setCondition,historyobject\n  // } = content\n\n  // const [invalid, setInvalid] = useState({})\n  // const [selected, setSelected] = useState('');\n  // const [alert, setAlert] = useState({})\n\n  // const Capitalize = (str) =>{\n  //     return str.charAt(0).toUpperCase() + str.slice(1);\n  //     }\n\n  // const onChangepd = (e) => {\n  //     setPersonaldetials({ ...personaldetails, [e.target.name]: Capitalize(e.target.value) })\n  // }\n  // const onChangecd = (e) => {\n  //     setContactdetails({ ...contactdetails, [e.target.name]: e.target.value })\n  // }\n  // const handleRadio = (e) => {\n  //     setPersonaldetials({ ...personaldetails,'gender': e.target.value })\n  // }\n\n  // // Passenger drop-down\n  // const [pselected, setPselected] = useState(\"Select passenger\");\n  // const onCP = (e) => {\n  //     setPselected(e.target.getAttribute('data-value'))\n  //     dbpassengers.forEach((element) => {\n  //         if (element.firstname+' '+element.lastname === e.target.getAttribute('data-value')) {\n  //             setPersonaldetials({\n  //                 ...personaldetails, \"firstname\": element.firstname,\n  //                 \"lastname\": element.lastname,\n  //                 \"nationality\": element.nationality,\n  //                 \"dateofbirth\":element.dateofbirth,\n  //                 'gender': element.gender\n  //             })\n  //         }\n  //     })\n  // }\n\n  // const onSP = (e) => {\n  //     setPrimarypassenger(e.target.getAttribute('data-value'))\n  // }\n\n  // const onSetPP = () =>{\n  //     if(passvalidation) {\n  //         updatePassengerDetails(passengernum, localpassenger)\n  //     }\n  // }\n\n  // // Passenger validation alerts\n\n  // //  Passengers validation and accordion for mutliple passenger\n\n  // const [passvalidation, setPassvalidation] = useState(false)\n  // const [erroraccord, setErroraccord] = useState({})\n  // const [adddetails, setAdddetails] = useState([true])\n  // const [editdetails, setEditdetails] = useState([])\n  // const [passengernum, setPassengernum] = useState(0)\n\n  // const addDeatilsClick = (e) => {\n  //     console.log(e.target.getAttribute('data-value'))\n  //     if (!passvalidation) {\n  //         setErroraccord({ ...erroraccord, [e.target.getAttribute('data-value')]: true })\n  //         pdvalidationcheck()\n  //     }\n  //     if (passvalidation) {\n  //         console.log('add', adddetails)\n  //         setErroraccord({ ...erroraccord, [e.target.getAttribute('data-value')]: false })\n  //         setAdddetails({ ...adddetails, [e.target.getAttribute('data-value')]: true })\n  //         setEditdetails({ ...editdetails, [e.target.getAttribute('data-value')]: false, [passengernum]: true })\n  //         // localpassengers[passengernum]= localpassenger\n  //         updatePassengerDetails(passengernum, localpassenger)\n  //         setPassengernum((passengernum) => Number(e.target.getAttribute('data-value')))\n  //         setPassvalidation(false)\n  //         setPersonaldetials(\n  //             {\n  //                 ...personaldetails,\n  //                 firstname: '',\n  //                 lastname: '',\n  //                 dateofbirth: '',\n  //                 nationality: '',\n  //                 gender:'',\n  //                 passport:'',\n  //                 expirydate:''\n  //             }\n  //         )\n\n  //     }\n  // }\n\n  // const editDetailsClick = (e) => {\n  //     console.log(e.target.getAttribute('data-value'))\n  //     if (!passvalidation) {\n  //         setErroraccord({ ...erroraccord, [e.target.getAttribute('data-value')]: true })\n  //         pdvalidationcheck()\n  //     }\n  //     if (passvalidation) {\n  //         console.log('edit', adddetails)\n  //         let value = e.target.getAttribute('data-value')\n  //         setErroraccord({ ...erroraccord, [value]: false })\n  //         setAdddetails({ ...adddetails, [value]: true })\n  //         setEditdetails({ ...editdetails, [value]: false, [passengernum]: true })\n  //         updatePassengerDetails(passengernum, localpassenger)\n  //         setPassengernum((passengernum) => Number(e.target.getAttribute('data-value')))\n  //         setPassvalidation(false)\n  //         setPersonaldetials(\n  //             {\n  //                 ...personaldetails,\n  //                 firstname: localpassengers[value].firstname,\n  //                 lastname: localpassengers[value].lastname,\n  //                 dateofbirth:localpassengers[value].dateofbirth,\n  //                 nationality:localpassengers[value].nationality,\n  //                 gender:localpassengers[value].gender\n  //             }\n  //         )\n  //         localpassengers[value] = ''\n  //     }\n  // }\n\n  // const pdvalidationcheck = () => {\n  //     let efname = /^[a-zA-Z]{1,}$/.test(personaldetails.firstname)\n  //     let elname = /^[a-zA-Z]{1,}$/.test(personaldetails.lastname)\n  //     let enationality = /^[a-zA-Z]{1,}$/.test(personaldetails.nationality)\n  //     let edob = /\\d{1,}/g.test(personaldetails.dateofbirth)\n  //     let egender =/^[a-zA-Z]{1,}$/.test(personaldetails.gender)\n  //     setAlert({\n  //         ...alert, \"firstname\": efname,\n  //         \"lastname\": elname,\n  //         \"nationality\": enationality,\n  //         \"dateofbirth\": edob,\n  //         \"gender\":egender\n  //     })\n  //     setInvalid({\n  //         ...invalid, 'firstname': efname ? '' : 'is-invalid',\n  //         'lastname': elname ? '' : 'is-invalid',\n  //         'nationality': enationality ? '' : 'is-invalid',\n  //         'dateofbirth': edob ? '' : 'is-invalid',\n  //         'gender':egender? '': 'is-invalid',\n\n  //     })\n  // }\n\n  // const cdvalidationcheck = () => {\n  //     let pp = primarypassenger.includes('Select Primary Contact')\n  //     let emb = /^[0-9]{10,}$/.test(contactdetails.mobilenumber)\n  //     let email = /@/.test(contactdetails.email)\n  //     setAlert({\n  //         ...alert, \"mobilenumber\": emb,\n  //         \"email\":email,\n  //         \"primarycontact\":!pp\n  //     })\n  //     setInvalid({\n  //         ...invalid, 'mobilenumber': emb ? '' : 'is-invalid',\n  //         'email': email ? '' : 'is-invalid',\n  //         'primarycontact': pp ? '' : 'is-invalid',\n  //     })\n  // } \n\n  // const updatePWCD = (localpassengers, primarypassenger, contactdetails) => {\n  //     return localpassengers.map(item => {\n  //         var temp = Object.assign({}, item);\n  //         if (temp.firstname+' '+temp.lastname === primarypassenger) {\n  //             temp.mobilenumber = contactdetails.mobilenumber\n  //             temp.email = contactdetails.email\n  //         }\n  //         return temp;\n  //     });\n  // }\n\n  // // Proceed Method\n  // const proceed = () => {\n  //     pdvalidationcheck()\n  //     if (passvalidation) {\n  //         cdvalidationcheck()\n  //         updatePassengerDetails(passengernum, localpassenger)\n  //         if (contactdetails.mobilenumber && contactdetails.email && primarypassenger !== 'Select Primary Contact') {\n  //             var pin = updatePWCD(localpassengers, primarypassenger, contactdetails);\n  //             setPwcd(pin)\n  //             localStorage.setItem('pwcd',JSON.stringify(pin))\n  //             localStorage.setItem('primarypassenger',primarypassenger)\n  //             navigate('/bookingsummary')\n  //         }\n  //     }\n  // }\n  // const [dbpassengers, setDbpassengers] = useState([])\n\n  // const [isPDBackButtonClicked, setIsPDBackButtonClicked] = useState(false)\n\n  // const navigateToSearch = (e) => {\n  //   e.preventDefault();\n  //   if(!isPDBackButtonClicked){\n  //         if(searchflights[2].tripValue === 'One-way'){\n  //             setIsPDBackButtonClicked(true)\n  //             setCondition(0)\n  //             navigate('/owsearch')\n  //         } \n  //         if(searchflights[2].tripValue === 'Return'){\n  //             setIsPDBackButtonClicked(true)\n  //             setCondition(1)\n  //             navigate('/rsearch')\n  //         } \n  //   }\n  // }\n  // useEffect(() => {\n  //     setPassarray(JSON.parse(localStorage.getItem('passarray')))\n  //     setLocalPassengers(JSON.parse(localStorage.getItem('pdinitial')))\n  //     setTripFlights(JSON.parse(localStorage.getItem('tripFlights')))\n  //     setSearchFlights(JSON.parse(localStorage.getItem('searchflights')))\n\n  //     window.history.pushState(historyobject, null, window.location.pathname);\n  //     window.addEventListener('popstate',navigateToSearch);\n  // }, [])\n\n  // useEffect(() => {\n  //     const controller = new AbortController();\n  //     const signal = controller.signal;\n  //     getPassengers(signal)\n  //         .then((data) => { setDbpassengers(data.passenger) })\n  //         .catch(err => {\n  //             if (err.name === \"AbortError\") {\n  //                 console.log('aborted')\n  //             }\n  //         })\n  //     return () => {\n  //         controller.abort();\n  //     }\n  // }, [])\n\n  // useEffect(() => {\n  //     if (personaldetails.firstname  && personaldetails.lastname  && personaldetails.dateofbirth  && personaldetails.nationality && personaldetails.gender ) {\n  //         setPassvalidation(true)\n  //     }\n  //     else {\n  //         setPassvalidation(false)\n  //     }\n  //     setLocalPassenger({\n  //         ...localpassenger, passengernumber: passengernum,\n  //         firstname: personaldetails.firstname,\n  //         lastname: personaldetails.lastname,\n  //         dateofbirth: personaldetails.dateofbirth,\n  //         nationality: personaldetails.nationality,\n  //         gender: personaldetails.gender,\n  //         passport: personaldetails.passport,\n  //         expirydate: personaldetails.expirydate,\n  //         type: passarray[passengernum],\n  //         mobilenumber:NaN,\n  //         email:''\n  //     })\n  // }, [personaldetails.firstname, personaldetails.lastname, personaldetails.dateofbirth, personaldetails.nationality, personaldetails.gender,personaldetails.passport, personaldetails.expirydate, selected])\n\n  // useEffect(() => {\n\n  //     if (localStorage.getItem('token')) {\n  //         const controller = new AbortController();\n  //         const signal = controller.signal;\n  //         getUsersdata(localStorage.getItem('token'),signal)\n  //             .then((element) => {\n  //                 setContactdetails({ ...contactdetails, 'mobilenumber': element.user.mobilenumber, 'email': element.user.email })\n  //             })\n  //             .catch(err => {\n  //                 if (err.name === \"AbortError\") {\n  //                     console.log('aborted')\n  //                 }\n  //             })\n  //         return () => {\n  //             controller.abort();\n  //         }\n  //     }\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"passenger-d-con\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pd-title\",\n      children: \"Passenger Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trip-summary-con\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pd-ts-title\",\n            children: \"Your trip summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 25\n          }, this), tripFlights.slice(0, searchflights[2].tripValue === 'Return' ? tripFlights.length : 1).map((flight, i) => {\n            const {\n              flightname,\n              departuredate,\n              departuretime,\n              departurecode,\n              destinationdate,\n              destinationtime,\n              destinationcode,\n              _id\n            } = flight;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pd-fd-con\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pd-ts-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"pd-ts-body-item\",\n                    children: i === 0 ? 'Outbound flight' : 'Inbound flight'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 565,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex justify-content-between\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"pd-ts-item\",\n                      children: departuredate\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 567,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"pd-ts-item\",\n                      children: destinationdate\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 568,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"pd-ts-item\",\n                        children: departuretime\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 572,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"pd-ts-item\",\n                        children: departurecode\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 573,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 571,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"d-flex align-items-center\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flightline\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 576,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 575,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"pd-ts-item\",\n                        children: destinationtime\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 579,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"pd-ts-item\",\n                        children: destinationcode\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 580,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 578,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 570,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"pd-ts-body-item\",\n                    children: [\"Opearted by \", flightname]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 45\n                }, this)\n              }, _id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 41\n              }, this)\n            }, void 0, false);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pd-ts-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pd-ts-item\",\n                children: \"Total trip price:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [searchflights[5].adultCount ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [searchflights[5].adultCount, \" Adult\"]\n                }, void 0, true) : '', searchflights[5].childCount ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [\"+\", searchflights[5].childCount, \"Child\"]\n                }, void 0, true) : '', searchflights[5].infantCount ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [\"+\", searchflights[5].infantCount, \"Infant\"]\n                }, void 0, true) : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pd-ts-item\",\n              children: searchflights[2].tripValue === 'Return' ? (searchflights[5].passengerCount - searchflights[5].infantCount) * (searchflights[5].passengerClass === 'Economy' ? tripFlights[0].economyprice + tripFlights[1].economyprice : tripFlights[0].premiumprice + tripFlights[1].premiumprice) : (searchflights[5].passengerCount - searchflights[5].infantCount) * (searchflights[5].passengerClass === 'Economy' ? tripFlights[0].economyprice : tripFlights[0].premiumprice)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 9\n  }, this);\n};\n_s(Passengerdetails, \"oROB1Cjzox9nwk+KrEkcsU+ghPQ=\", false, function () {\n  return [useFlight];\n});\n_c = Passengerdetails;\nexport default Passengerdetails;\nvar _c;\n$RefreshReg$(_c, \"Passengerdetails\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useFlight","Passengerdetails","searchflights","tripFlights","slice","tripValue","length","map","flight","i","flightname","departuredate","departuretime","departurecode","destinationdate","destinationtime","destinationcode","_id","adultCount","childCount","infantCount","passengerCount","passengerClass","economyprice","premiumprice"],"sources":["/Users/thilakvoruganti/Desktop/FlightBooking/src/pages/Passengerdetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport '../styles/Passengerdetails.css'\n// import Alert from '../components/Alert';\nimport { useNavigate } from 'react-router-dom';\nimport {useFlight} from '../context/Flight'\nconst Passengerdetails = () => {\n\n    const {searchflights,tripFlights} = useFlight()\n\n    // let navigate = useNavigate()\n    // const content = useContext(flightContent)\n    // const { personaldetails, setPersonaldetials, contactdetails, setContactdetails,\n    //     tripFlights, localpassengers, localpassenger, setLocalPassenger,\n    //     getPassengers, passarray, setPassarray, updatePassengerDetails,\n    //     searchflights, setSearchFlights,  setLocalPassengers, primarypassenger, setPrimarypassenger,\n    //     setPwcd, setTripFlights,setCondition,historyobject\n    // } = content\n\n    // const [invalid, setInvalid] = useState({})\n    // const [selected, setSelected] = useState('');\n    // const [alert, setAlert] = useState({})\n\n    // const Capitalize = (str) =>{\n    //     return str.charAt(0).toUpperCase() + str.slice(1);\n    //     }\n    \n    // const onChangepd = (e) => {\n    //     setPersonaldetials({ ...personaldetails, [e.target.name]: Capitalize(e.target.value) })\n    // }\n    // const onChangecd = (e) => {\n    //     setContactdetails({ ...contactdetails, [e.target.name]: e.target.value })\n    // }\n    // const handleRadio = (e) => {\n    //     setPersonaldetials({ ...personaldetails,'gender': e.target.value })\n    // }\n\n\n\n    // // Passenger drop-down\n    // const [pselected, setPselected] = useState(\"Select passenger\");\n    // const onCP = (e) => {\n    //     setPselected(e.target.getAttribute('data-value'))\n    //     dbpassengers.forEach((element) => {\n    //         if (element.firstname+' '+element.lastname === e.target.getAttribute('data-value')) {\n    //             setPersonaldetials({\n    //                 ...personaldetails, \"firstname\": element.firstname,\n    //                 \"lastname\": element.lastname,\n    //                 \"nationality\": element.nationality,\n    //                 \"dateofbirth\":element.dateofbirth,\n    //                 'gender': element.gender\n    //             })\n    //         }\n    //     })\n    // }\n\n    // const onSP = (e) => {\n    //     setPrimarypassenger(e.target.getAttribute('data-value'))\n    // }\n\n    // const onSetPP = () =>{\n    //     if(passvalidation) {\n    //         updatePassengerDetails(passengernum, localpassenger)\n    //     }\n    // }\n\n    // // Passenger validation alerts\n\n\n\n\n    // //  Passengers validation and accordion for mutliple passenger\n\n    // const [passvalidation, setPassvalidation] = useState(false)\n    // const [erroraccord, setErroraccord] = useState({})\n    // const [adddetails, setAdddetails] = useState([true])\n    // const [editdetails, setEditdetails] = useState([])\n    // const [passengernum, setPassengernum] = useState(0)\n\n    // const addDeatilsClick = (e) => {\n    //     console.log(e.target.getAttribute('data-value'))\n    //     if (!passvalidation) {\n    //         setErroraccord({ ...erroraccord, [e.target.getAttribute('data-value')]: true })\n    //         pdvalidationcheck()\n    //     }\n    //     if (passvalidation) {\n    //         console.log('add', adddetails)\n    //         setErroraccord({ ...erroraccord, [e.target.getAttribute('data-value')]: false })\n    //         setAdddetails({ ...adddetails, [e.target.getAttribute('data-value')]: true })\n    //         setEditdetails({ ...editdetails, [e.target.getAttribute('data-value')]: false, [passengernum]: true })\n    //         // localpassengers[passengernum]= localpassenger\n    //         updatePassengerDetails(passengernum, localpassenger)\n    //         setPassengernum((passengernum) => Number(e.target.getAttribute('data-value')))\n    //         setPassvalidation(false)\n    //         setPersonaldetials(\n    //             {\n    //                 ...personaldetails,\n    //                 firstname: '',\n    //                 lastname: '',\n    //                 dateofbirth: '',\n    //                 nationality: '',\n    //                 gender:'',\n    //                 passport:'',\n    //                 expirydate:''\n    //             }\n    //         )\n\n    //     }\n    // }\n\n    // const editDetailsClick = (e) => {\n    //     console.log(e.target.getAttribute('data-value'))\n    //     if (!passvalidation) {\n    //         setErroraccord({ ...erroraccord, [e.target.getAttribute('data-value')]: true })\n    //         pdvalidationcheck()\n    //     }\n    //     if (passvalidation) {\n    //         console.log('edit', adddetails)\n    //         let value = e.target.getAttribute('data-value')\n    //         setErroraccord({ ...erroraccord, [value]: false })\n    //         setAdddetails({ ...adddetails, [value]: true })\n    //         setEditdetails({ ...editdetails, [value]: false, [passengernum]: true })\n    //         updatePassengerDetails(passengernum, localpassenger)\n    //         setPassengernum((passengernum) => Number(e.target.getAttribute('data-value')))\n    //         setPassvalidation(false)\n    //         setPersonaldetials(\n    //             {\n    //                 ...personaldetails,\n    //                 firstname: localpassengers[value].firstname,\n    //                 lastname: localpassengers[value].lastname,\n    //                 dateofbirth:localpassengers[value].dateofbirth,\n    //                 nationality:localpassengers[value].nationality,\n    //                 gender:localpassengers[value].gender\n    //             }\n    //         )\n    //         localpassengers[value] = ''\n    //     }\n    // }\n\n\n\n    // const pdvalidationcheck = () => {\n    //     let efname = /^[a-zA-Z]{1,}$/.test(personaldetails.firstname)\n    //     let elname = /^[a-zA-Z]{1,}$/.test(personaldetails.lastname)\n    //     let enationality = /^[a-zA-Z]{1,}$/.test(personaldetails.nationality)\n    //     let edob = /\\d{1,}/g.test(personaldetails.dateofbirth)\n    //     let egender =/^[a-zA-Z]{1,}$/.test(personaldetails.gender)\n    //     setAlert({\n    //         ...alert, \"firstname\": efname,\n    //         \"lastname\": elname,\n    //         \"nationality\": enationality,\n    //         \"dateofbirth\": edob,\n    //         \"gender\":egender\n    //     })\n    //     setInvalid({\n    //         ...invalid, 'firstname': efname ? '' : 'is-invalid',\n    //         'lastname': elname ? '' : 'is-invalid',\n    //         'nationality': enationality ? '' : 'is-invalid',\n    //         'dateofbirth': edob ? '' : 'is-invalid',\n    //         'gender':egender? '': 'is-invalid',\n\n    //     })\n    // }\n\n    // const cdvalidationcheck = () => {\n    //     let pp = primarypassenger.includes('Select Primary Contact')\n    //     let emb = /^[0-9]{10,}$/.test(contactdetails.mobilenumber)\n    //     let email = /@/.test(contactdetails.email)\n    //     setAlert({\n    //         ...alert, \"mobilenumber\": emb,\n    //         \"email\":email,\n    //         \"primarycontact\":!pp\n    //     })\n    //     setInvalid({\n    //         ...invalid, 'mobilenumber': emb ? '' : 'is-invalid',\n    //         'email': email ? '' : 'is-invalid',\n    //         'primarycontact': pp ? '' : 'is-invalid',\n    //     })\n    // } \n\n    // const updatePWCD = (localpassengers, primarypassenger, contactdetails) => {\n    //     return localpassengers.map(item => {\n    //         var temp = Object.assign({}, item);\n    //         if (temp.firstname+' '+temp.lastname === primarypassenger) {\n    //             temp.mobilenumber = contactdetails.mobilenumber\n    //             temp.email = contactdetails.email\n    //         }\n    //         return temp;\n    //     });\n    // }\n\n    // // Proceed Method\n    // const proceed = () => {\n    //     pdvalidationcheck()\n    //     if (passvalidation) {\n    //         cdvalidationcheck()\n    //         updatePassengerDetails(passengernum, localpassenger)\n    //         if (contactdetails.mobilenumber && contactdetails.email && primarypassenger !== 'Select Primary Contact') {\n    //             var pin = updatePWCD(localpassengers, primarypassenger, contactdetails);\n    //             setPwcd(pin)\n    //             localStorage.setItem('pwcd',JSON.stringify(pin))\n    //             localStorage.setItem('primarypassenger',primarypassenger)\n    //             navigate('/bookingsummary')\n    //         }\n    //     }\n    // }\n    // const [dbpassengers, setDbpassengers] = useState([])\n\n\n\n    // const [isPDBackButtonClicked, setIsPDBackButtonClicked] = useState(false)\n\n    // const navigateToSearch = (e) => {\n    //   e.preventDefault();\n    //   if(!isPDBackButtonClicked){\n    //         if(searchflights[2].tripValue === 'One-way'){\n    //             setIsPDBackButtonClicked(true)\n    //             setCondition(0)\n    //             navigate('/owsearch')\n    //         } \n    //         if(searchflights[2].tripValue === 'Return'){\n    //             setIsPDBackButtonClicked(true)\n    //             setCondition(1)\n    //             navigate('/rsearch')\n    //         } \n    //   }\n    // }\n    // useEffect(() => {\n    //     setPassarray(JSON.parse(localStorage.getItem('passarray')))\n    //     setLocalPassengers(JSON.parse(localStorage.getItem('pdinitial')))\n    //     setTripFlights(JSON.parse(localStorage.getItem('tripFlights')))\n    //     setSearchFlights(JSON.parse(localStorage.getItem('searchflights')))\n\n    //     window.history.pushState(historyobject, null, window.location.pathname);\n    //     window.addEventListener('popstate',navigateToSearch);\n    // }, [])\n\n    // useEffect(() => {\n    //     const controller = new AbortController();\n    //     const signal = controller.signal;\n    //     getPassengers(signal)\n    //         .then((data) => { setDbpassengers(data.passenger) })\n    //         .catch(err => {\n    //             if (err.name === \"AbortError\") {\n    //                 console.log('aborted')\n    //             }\n    //         })\n    //     return () => {\n    //         controller.abort();\n    //     }\n    // }, [])\n\n    // useEffect(() => {\n    //     if (personaldetails.firstname  && personaldetails.lastname  && personaldetails.dateofbirth  && personaldetails.nationality && personaldetails.gender ) {\n    //         setPassvalidation(true)\n    //     }\n    //     else {\n    //         setPassvalidation(false)\n    //     }\n    //     setLocalPassenger({\n    //         ...localpassenger, passengernumber: passengernum,\n    //         firstname: personaldetails.firstname,\n    //         lastname: personaldetails.lastname,\n    //         dateofbirth: personaldetails.dateofbirth,\n    //         nationality: personaldetails.nationality,\n    //         gender: personaldetails.gender,\n    //         passport: personaldetails.passport,\n    //         expirydate: personaldetails.expirydate,\n    //         type: passarray[passengernum],\n    //         mobilenumber:NaN,\n    //         email:''\n    //     })\n    // }, [personaldetails.firstname, personaldetails.lastname, personaldetails.dateofbirth, personaldetails.nationality, personaldetails.gender,personaldetails.passport, personaldetails.expirydate, selected])\n\n    // useEffect(() => {\n\n    //     if (localStorage.getItem('token')) {\n    //         const controller = new AbortController();\n    //         const signal = controller.signal;\n    //         getUsersdata(localStorage.getItem('token'),signal)\n    //             .then((element) => {\n    //                 setContactdetails({ ...contactdetails, 'mobilenumber': element.user.mobilenumber, 'email': element.user.email })\n    //             })\n    //             .catch(err => {\n    //                 if (err.name === \"AbortError\") {\n    //                     console.log('aborted')\n    //                 }\n    //             })\n    //         return () => {\n    //             controller.abort();\n    //         }\n    //     }\n    // }, [])\n\n    return (\n        <div className='passenger-d-con'>\n            <div className='pd-title'>Passenger Details</div>\n            <div className='d-flex justify-content-between'>\n                {/* <div>\n                    <div className=\"accordion open\" id=\"passengerAccordion\">\n                        {localpassengers.map((element, index) => {\n                            return  <>\n                                    <div className=\"accordion-item pass-accord-item\">\n                                        <div className=\"pass-accord-header\" id={`heading${index}`}  >\n                                            <div className='d-flex justify-content-between align-items-center'>\n                                                <div className='pd-form-title'>{element.firstname ? element.firstname + element.lastname : <>Passenger {index+1}</>} ({element.type})</div>\n                                                {!adddetails[index] ? <div className=\"cord-add-d-btn\" onClick={addDeatilsClick} data-value={index} data-bs-toggle=\"collapse\" data-bs-target={passvalidation ? `#collapse${index}` : ''} aria-expanded='true' aria-controls={`collapse${index}`}>Add details</div> : <></>}\n                                                {element.firstname && editdetails[index] ? <div className=\"cord-add-d-btn\" onClick={editDetailsClick} data-value={index} data-bs-toggle=\"collapse\" data-bs-target={passvalidation ? `#collapse${index}` : ''} aria-expanded='true' aria-controls={`collapse${index}`}>Edit Details</div> : <></>}\n                                            </div>\n                                        </div>\n                                        <div className='next-stp-con'>\n                                            {erroraccord[index] ? <div className='next-step-alert'>Please complete the details of the remaining passengers in your booking to continue to the next step.</div> : <></>}\n                                        </div>\n                                        <div id={`collapse${index}`} className={`accordion-collapse collapse ${index === 0 ? 'show' : ''}`} aria-labelledby={`heading${index}`} data-bs-parent=\"#passengerAccordion\">\n                                            <div className=\"accordion-body pass-accord-body\">\n                                                <form className='pd-form'>\n                                                    <div>{localStorage.getItem('token') ?\n                                                        <div className=\"dropdown\">\n                                                            <button className=\"dbpass-btn dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                                                <div>{pselected}</div><div className='arrow down'></div>\n                                                            </button>\n                                                            <div className=\"dropdown-menu dbpass-dd-menu\">\n                                                                {dbpassengers.map((element,index) => {\n                                                                    return <div className=\"dropdown-item\" key={index+1} onClick={onCP} data-value={element.firstname+' '+element.lastname}>{element.firstname+' '+element.lastname}</div>\n                                                                })}\n                                                            </div>\n                                                        </div> : <></>}\n                                                    </div>\n                                                    <div className='pass-bm'>\n                                                        <div>\n                                                            <div className=\"form-floating\">\n                                                                <input className={`cd-input-item-mr form-control ${invalid.firstname}`}\n                                                                    type=\"text\"\n                                                                    onChange={onChangepd}\n                                                                    value={personaldetails.firstname}\n                                                                    name=\"firstname\"\n                                                                    id=\"firstname\"\n                                                                    placeholder=\"First name\"\n                                                                    onBlur={() => {\n                                                                        let regex = /^[a-zA-Z]{1,}$/.test(personaldetails.firstname)\n                                                                        setAlert({ ...alert, \"firstname\": regex })\n                                                                        setInvalid({ ...invalid, 'firstname': regex ? '' : 'is-invalid' })\n                                                                    }\n                                                                    }\n                                                                />\n                                                                <label className='cd-innput-label' htmlFor=\"firstname\">First name</label>\n                                                            </div>\n                                                            {alert.firstname === false ? <Alert error={\"Please enter a first name\"} /> : <></>}\n                                                        </div>\n                                                        <div>\n                                                            <div className=\"form-floating\">\n                                                                <input className={`cd-input-item form-control ${invalid.lastname}`}\n                                                                    type=\"text\"\n                                                                    onChange={onChangepd}\n                                                                    value={personaldetails.lastname}\n                                                                    name=\"lastname\"\n                                                                    id=\"lastname\"\n                                                                    placeholder=\"Last name\"\n                                                                    onBlur={() => {\n                                                                        let regex = /^[a-zA-Z]{1,}$/.test(personaldetails.lastname)\n                                                                        setAlert({ ...alert, \"lastname\": regex })\n                                                                        setInvalid({ ...invalid, 'lastname': regex ? '' : 'is-invalid' })\n                                                                    }\n                                                                    }\n                                                                />\n                                                                <label className='cd-innput-label' htmlFor=\"lastname\">Last name</label>\n                                                            </div>\n                                                            {alert.lastname === false ? <Alert error={\"Please enter a last name\"} /> : <></>}\n                                                        </div>\n                                                    </div>\n                                                    <div className='pass-bm'>\n                                                        <div>\n                                                            <div className=\"form-floating\">\n                                                                <input className={`cd-input-item-mr form-control ${invalid.dateofbirth}`}\n                                                                    type=\"date\"\n                                                                    onChange={onChangepd}\n                                                                    value={personaldetails.dateofbirth}\n                                                                    name=\"dateofbirth\"\n                                                                    id=\"dateofbirth\"\n                                                                    placeholder=\"Date of birth\"\n                                                                    onBlur={() => {\n                                                                        let regex = /\\d{1,}/g.test(personaldetails.dateofbirth)\n                                                                        setAlert({ ...alert, \"dateofbirth\": regex })\n                                                                        setInvalid({ ...invalid, 'dateofbirth': regex ? '' : 'is-invalid' })\n                                                                    }\n                                                                    }\n                                                                />\n                                                                <label className='cd-innput-label' htmlFor=\"dateofbirth\">Date of birth</label>\n                                                            </div>\n                                                            {alert.dateofbirth === false ? <Alert error={\"Please enter a date of birth\"} /> : <></>}\n                                                        </div>\n                                                        <div>\n                                                            <div className=\"form-floating\">\n                                                                <input className={`cd-input-item form-control ${invalid.nationality}`}\n                                                                    type=\"text\"\n                                                                    onChange={onChangepd}\n                                                                    value={personaldetails.nationality}\n                                                                    name=\"nationality\"\n                                                                    id=\"nationality\"\n                                                                    placeholder=\"Nationality\"\n                                                                    onBlur={() => {\n                                                                        let regex = /^[a-zA-Z]{1,}$/.test(personaldetails.nationality)\n                                                                        setAlert({ ...alert, \"nationality\": regex })\n                                                                        setInvalid({ ...invalid, 'nationality': regex ? '' : 'is-invalid' })\n                                                                    }\n                                                                    }\n                                                                />\n                                                                <label className='cd-innput-label' htmlFor=\"nationality\">Nationality</label>\n                                                            </div>\n                                                            {alert.nationality === false ? <Alert error={\"Please enter a Nationality\"} /> : <></>}\n                                                        </div>\n                                                    </div>\n                                                    <div >\n                                                        <div className='select-radio-con'>\n                                                            <div className={`form-check select-radio`}>\n                                                                <input className={`form-check-input select-input  ${invalid.gender} `}\n                                                                    onChange={(e) =>{\n                                                                        handleRadio(e)\n                                                                    }\n                                                                    }\n                                                                    checked={personaldetails.gender === 'Male'}\n                                                                    value=\"Male\" \n                                                                    type=\"radio\"\n                                                                    name=\"genderOptions\"\n                                                                    id=\"male\"\n                                                                    onBlur={()=>{\n                                                                        let regex = /^[a-zA-Z]{1,}$/.test(personaldetails.gender)\n                                                                        setAlert({ ...alert, \"gender\": regex })\n                                                                        setInvalid({ ...invalid,'gender':regex?'':'is-invalid'})\n                                                                    }}\n                                                                />\n                                                                <label className=\"form-check-label select-label\" htmlFor=\"male\">\n                                                                    Male\n                                                                </label>\n                                                            </div>\n                                                            <div className={`form-check select-radio `}>\n                                                                <input className={`form-check-input select-input  ${invalid.gender}`}\n                                                                    onChange={handleRadio} \n                                                                    type=\"radio\"\n                                                                    checked={personaldetails.gender === 'Female'}\n                                                                    value=\"Female\"\n                                                                    name=\"genderOptions\"\n                                                                    id=\"female\" \n                                                                    onBlur={()=>{\n                                                                        let regex = /^[a-zA-Z]{1,}$/.test(personaldetails.gender)\n                                                                        setAlert({ ...alert, \"gender\": regex })\n                                                                        setInvalid({ ...invalid,'gender':regex?'':'is-invalid'})\n                                                                    }}\n                                                                />\n                                                                <label className=\"form-check-label select-label\" htmlFor=\"female\">\n                                                                    Female\n                                                                </label>\n                                                            </div>\n                                                        </div>\n                                                        {alert.gender === false ? <Alert error={\"Please select a gender\"} /> : <></>}\n                                                    </div>\n                                                    <div className='pass-bm'>\n                                                        <div>\n                                                            <div className=\"form-floating\">\n                                                                <input className={`cd-input-item-mr form-control ${invalid.passport}`}\n                                                                    type=\"text\"\n                                                                    onChange={onChangepd}\n                                                                    value={personaldetails.passport}\n                                                                    name=\"passport\"\n                                                                    id=\"passport\"\n                                                                    placeholder=\"Passport (Optional)\"\n                                                                    onBlur={() => {\n                                                                        // let regex =/^[a-zA-Z]{1,}$/.test(personaldetails.passport)\n                                                                        // setAlert({...alert,\"passport\":regex})\n                                                                        // setInvalid({...invalid,'passport':regex?'':'is-invalid'})\n                                                                    }\n                                                                    }\n                                                                />\n                                                                <label className='cd-innput-label' htmlFor=\"passport\">Passport (Optional)</label>\n                                                            </div>\n                                                        </div>\n                                                        <div>\n                                                            <div className=\"form-floating\">\n                                                                <input className={`cd-input-item form-control ${invalid.expirydate}`}\n                                                                    type=\"date\"\n                                                                    onChange={onChangepd}\n                                                                    value={personaldetails.expirydate}\n                                                                    name=\"expirydate\"\n                                                                    id=\"expirydate\"\n                                                                    placeholder=\"Passport expirydate (Optional)\"\n                                                                    onBlur={() => {\n                                                                        // let regex = /^[a-zA-Z]{1,}$/.test(personaldetails.expirydate)\n                                                                        // setAlert({ ...alert, \"expirydate\": regex })\n                                                                        // setInvalid({ ...invalid, 'expirydate': regex ? '' : 'is-invalid' })\n                                                                    }\n                                                                    }\n                                                                />\n                                                                <label className='cd-innput-label' htmlFor=\"expirydate\">Passport expirydate (Optional)</label>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    </>\n                        })}\n                    </div>\n                    <div className='cd-con'>\n                        <div className='pd-form'>\n                            <div className='pd-form-title'>Contact Details</div>\n                            <div className='pd-form-tdesc'>Please provide your contact details so that we can notify you the updates on your flight</div>\n                            <div>\n                                <div className=\"dropdown\">\n                                    <button className=\"dbpass-btn dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" onClick={onSetPP}>\n                                        <div>{primarypassenger}</div><div className='arrow down'></div>\n                                    </button>\n                                    <div className=\"dropdown-menu dbpass-dd-menu\">\n                                    <div className=\"dropdown-item\" onClick={onSP} data-value='Select Primary Contact'>Selected Primary Contact</div>\n                                        {localpassengers.map((element) => {\n                                            return <div className=\"dropdown-item\"  onClick={onSP} data-value={element.firstname?element.firstname+' '+element.lastname:'Passenger '+element.passengernumber}>{element.firstname?element.firstname+' '+element.lastname:'Passenger '+element.passengernumber}</div>\n                                        })}\n                                    </div>\n                                </div>\n                                {alert.primarycontact === false ? <Alert error={\"Please select a primary contact\"} /> : <></>}                               \n                            </div>\n                            <div className='d-flex'>\n                                <div>\n                                    <div className=\"form-floating\">\n                                        <input type=\"tel\" maxLength={10} className={`cd-input-item-mr form-control ${invalid.mobilenumber}`} onChange={onChangecd} value={contactdetails.mobilenumber} name=\"mobilenumber\" id=\"mobilenumber\" placeholder=\"Mobile number\"\n                                            onBlur={() => {\n                                                let regex = /^[0-9]{10,}$/.test(contactdetails.mobilenumber)\n                                                setAlert({ ...alert, \"mobilenumber\": regex })\n                                                setInvalid({ ...invalid, 'mobilenumber': regex ? '' : 'is-invalid' })\n                                            }\n                                            }\n                                        />\n                                        <label htmlFor=\"mobilenumber\">Mobile number</label>\n                                    </div>\n                                    {alert.mobilenumber === false ? <Alert error={\"Please enter a valid Mobile number\"} /> : <></>}\n                                </div>\n                                <div>\n                                    <div className=\"form-floating\">\n                                        <input type=\"email\"  className={`cd-input-item form-control ${invalid.email}`} onChange={onChangecd} value={contactdetails.email} name=\"email\" id=\"email\" placeholder=\"Email\"\n                                            onBlur={() => {\n                                                let ed = /@/.test(contactdetails.email)\n                                                setAlert({ ...alert, \"email\": ed })\n                                                setInvalid({ ...invalid, 'email': ed ? '' : 'is-invalid' })\n                                            }\n                                            }\n                                        />\n                                        <label htmlFor=\"email\">Email</label>\n                                    </div>\n                                    {alert.email === false ? <Alert error={\"Please enter a valid email\"} /> : <></>}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='d-flex justify-content-around'>\n                        <button className='prcd-btn' onClick={proceed}>Proceed</button>\n                    </div>\n                </div> */}\n                <div>\n                    <div className='trip-summary-con'>\n                        <div className='pd-ts-title'>Your trip summary</div>\n                        {tripFlights.slice(0, searchflights[2].tripValue === 'Return' ? tripFlights.length : 1).map((flight, i) => {\n                            const { flightname, departuredate, departuretime, departurecode, destinationdate, destinationtime, destinationcode ,_id} = flight\n                            return  <>\n                                        <div className='pd-fd-con' key={_id}>\n                                            <div className='pd-ts-body'>\n                                                <div className='pd-ts-body-item'>{i === 0 ? 'Outbound flight' : 'Inbound flight'}</div>\n                                                <div className='d-flex justify-content-between'>\n                                                    <div className='pd-ts-item'>{departuredate}</div>\n                                                    <div className='pd-ts-item'>{destinationdate}</div>\n                                                </div>\n                                                <div className='d-flex'>\n                                                    <div>\n                                                        <div className='pd-ts-item'>{departuretime}</div>\n                                                        <div className='pd-ts-item'>{departurecode}</div>\n                                                    </div>\n                                                    <div className='d-flex align-items-center'>\n                                                        <div className='flightline'></div>\n                                                    </div>\n                                                    <div>\n                                                        <div className='pd-ts-item'>{destinationtime}</div>\n                                                        <div className='pd-ts-item'>{destinationcode}</div>\n                                                    </div>\n                                                </div>\n                                                <div className='pd-ts-body-item'>Opearted by {flightname}</div>\n                                            </div>\n                                        </div>\n                                    </>\n                        }\n                        )\n                        }\n                        <div className='pd-ts-footer'>\n                            <div>\n                                <div className='pd-ts-item'>Total trip price:</div>\n                                <div>\n                                    {searchflights[5].adultCount ? <>{searchflights[5].adultCount} Adult</> : ''}{searchflights[5].childCount ? <>+{searchflights[5].childCount}Child</> : ''}{searchflights[5].infantCount ? <>+{searchflights[5].infantCount}Infant</> : ''}\n                                </div>\n                            </div>\n                            <div className='pd-ts-item'>{searchflights[2].tripValue === 'Return' ? (searchflights[5].passengerCount - searchflights[5].infantCount) * (searchflights[5].passengerClass === 'Economy' ? tripFlights[0].economyprice + tripFlights[1].economyprice : tripFlights[0].premiumprice + tripFlights[1].premiumprice) : (searchflights[5].passengerCount - searchflights[5].infantCount) * (searchflights[5].passengerClass === 'Economy' ? tripFlights[0].economyprice : tripFlights[0].premiumprice)}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Passengerdetails\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gCAAgC;AACvC;AACA,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAAQC,SAAS,QAAO,mBAAmB;AAAA;AAAA;AAC3C,MAAMC,gBAAgB,GAAG,MAAM;EAAA;EAE3B,MAAM;IAACC,aAAa;IAACC;EAAW,CAAC,GAAGH,SAAS,EAAE;;EAE/C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAKA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;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"},"metadata":{},"sourceType":"module"}