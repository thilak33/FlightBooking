{"ast":null,"code":"var _jsxFileName = \"/Users/thilakvoruganti/Desktop/watch/src/context/FlightState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport flightContent from './FlightContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlightState = props => {\n  _s();\n  const host = \"http://localhost:4000\";\n  const flightsInitial = [];\n  const [flights, setflights] = useState(flightsInitial);\n\n  // From-to-component\n\n  const Airports = [{\n    name: \"Netaji Subhash Chandra Bose International Airport\",\n    city: \"Kolkata\",\n    id: \"CCA\",\n    country: \"India\"\n  }, {\n    name: \"Chennai International Airport\",\n    city: \"Chennai\",\n    id: \"CHE\",\n    country: \"India\"\n  }, {\n    name: \"Thiruvananthapuram International Airport\",\n    city: \"Thiruvananthapuram\",\n    id: \"CCC\",\n    country: \"India\"\n  }, {\n    name: \"Sardar Vallabh Bhai Patel International Airport\",\n    city: \"Ahmedabad\",\n    id: \"CCD\",\n    country: \"India\"\n  }, {\n    name: \"Guru Ram Dass Jee International Airport\",\n    city: \"Amritsar\",\n    id: \"CCE\",\n    country: \"India\"\n  }, {\n    name: \"Lokpriya Gopinath Bordoloi International Airport\",\n    city: \"Guwahati\",\n    id: \"CCF\",\n    country: \"India\"\n  }, {\n    name: \"Goa International Airport\",\n    city: \"Goa\",\n    id: \"CCJ\",\n    country: \"India\"\n  }, {\n    name: \"Srinagar International Airport\",\n    city: \"Srinagar\",\n    id: \"CCH\",\n    country: \"India\"\n  }, {\n    name: \"Jaipur International Airport\",\n    city: \"Jaipur\",\n    id: \"CCI\",\n    country: \"India\"\n  }, {\n    name: \"Kozhikode Airport\",\n    city: \"Calicut\",\n    id: \"CCZ\",\n    country: \"India\"\n  }, {\n    name: \"Veer Savarkar International Airport\",\n    city: \" Port Blair, A&N Islands\",\n    id: \"CCK\",\n    country: \"India\"\n  }, {\n    name: \"Indira Gandhi International Airport\",\n    city: \"Delhi\",\n    id: \"DEL\",\n    country: \"India\"\n  }, {\n    name: \"Chattrapati Shivaji International Airport\",\n    city: \"Mumbai\",\n    id: \"CCM\",\n    country: \"India\"\n  }, {\n    name: \"GMR Hyderabad International Airport\",\n    city: \"Hyderabad\",\n    id: \"HYD\",\n    country: \"India\"\n  }, {\n    name: \"Bangalore International Airport Limited\",\n    city: \"Bengaluru\",\n    id: \"BEN\",\n    country: \"India\"\n  }, {\n    name: \"Cochin International Airport\",\n    city: \"Kochi\",\n    id: \"CCP\",\n    country: \"India\"\n  }, {\n    name: \"Bharat Ratna Babasaheb Dr. B.R. Ambedkar International Airport\",\n    city: \"Nagpur\",\n    id: \"CCQ\",\n    country: \"India\"\n  }];\n  const [departure, setDeparture] = useState('');\n  const [arrival, setArrival] = useState('');\n  const [filter, setFilter] = useState(Airports);\n  const onChangeArrival = e => {\n    setArrival(e.target.value);\n    filterDest(e.target.value);\n  };\n  const onChangeDeparture = e => {\n    setDeparture(e.target.value);\n    filterDest(e.target.value);\n  };\n  const filterDest = value => {\n    const result = Airports.filter(element => {\n      const {\n        name,\n        city\n      } = element;\n      var cityfilter = city.toLowerCase();\n      var namefilter = name.toLowerCase();\n      if (cityfilter.indexOf(value.toLowerCase()) > -1 || namefilter.indexOf(value.toLowerCase()) > -1) {\n        return element;\n      }\n    });\n    setFilter(result);\n  };\n\n  //\n\n  const getFlights = async (from, to, departuredate) => {\n    const response = await fetch(`${host}/api/v1/flights?from=${from}&to=${to}&departuredate=${departuredate}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    setflights(json.flights);\n  };\n  return /*#__PURE__*/_jsxDEV(flightContent.Provider, {\n    value: {\n      departure,\n      setDeparture,\n      arrival,\n      setArrival,\n      filter,\n      Airports,\n      flights,\n      filterDest,\n      onChangeDeparture,\n      onChangeArrival,\n      getFlights\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightState, \"lYiZ53tDq824+6FHJhjlpJ35AvE=\");\n_c = FlightState;\nexport default FlightState;\nvar _c;\n$RefreshReg$(_c, \"FlightState\");","map":{"version":3,"names":["React","useState","flightContent","FlightState","props","host","flightsInitial","flights","setflights","Airports","name","city","id","country","departure","setDeparture","arrival","setArrival","filter","setFilter","onChangeArrival","e","target","value","filterDest","onChangeDeparture","result","element","cityfilter","toLowerCase","namefilter","indexOf","getFlights","from","to","departuredate","response","fetch","method","headers","json","children"],"sources":["/Users/thilakvoruganti/Desktop/watch/src/context/FlightState.js"],"sourcesContent":["import React,{useState} from 'react'\nimport flightContent from './FlightContext'\n\nconst FlightState = (props) => {\n    const host = \"http://localhost:4000\"\n    const flightsInitial = []\n    const [flights, setflights] = useState(flightsInitial)\n\n    // From-to-component\n\n    const Airports = [\n      {\n          name:\"Netaji Subhash Chandra Bose International Airport\",\n          city:\"Kolkata\",\n          id:\"CCA\",\n          country:\"India\"\n      },\n      {\n          name:\"Chennai International Airport\",\n          city:\"Chennai\",\n          id:\"CHE\",\n          country:\"India\"\n      },\n      {\n          name:\"Thiruvananthapuram International Airport\",\n          city:\"Thiruvananthapuram\",\n          id:\"CCC\",\n          country:\"India\"\n      },\n      {\n          name:\"Sardar Vallabh Bhai Patel International Airport\",\n          city:\"Ahmedabad\",\n          id:\"CCD\",\n          country:\"India\"\n      },\n      {\n          name:\"Guru Ram Dass Jee International Airport\",\n          city:\"Amritsar\",\n          id:\"CCE\",\n          country:\"India\"\n      },\n      {\n          name:\"Lokpriya Gopinath Bordoloi International Airport\",\n          city:\"Guwahati\",\n          id:\"CCF\",\n          country:\"India\"\n      },\n      {\n          name:\"Goa International Airport\",\n          city:\"Goa\",\n          id:\"CCJ\",\n          country:\"India\"\n      },\n      {\n          name:\"Srinagar International Airport\",\n          city:\"Srinagar\",\n          id:\"CCH\",\n          country:\"India\"\n      }, \n      {\n          name:\"Jaipur International Airport\",\n          city:\"Jaipur\",\n          id:\"CCI\",\n          country:\"India\"\n      },\n      {\n          name:\"Kozhikode Airport\",\n          city:\"Calicut\",\n          id:\"CCZ\",\n          country:\"India\"\n      },\n      {\n          name:\"Veer Savarkar International Airport\",\n          city:\" Port Blair, A&N Islands\",\n          id:\"CCK\",\n          country:\"India\"\n      },\n      {\n          name:\"Indira Gandhi International Airport\",\n          city:\"Delhi\",\n          id:\"DEL\",\n          country:\"India\"\n      },\n      {\n          name:\"Chattrapati Shivaji International Airport\",\n          city:\"Mumbai\",\n          id:\"CCM\",\n          country:\"India\"\n      },\n      {\n          name:\"GMR Hyderabad International Airport\",\n          city:\"Hyderabad\",\n          id:\"HYD\",\n          country:\"India\"\n      },\n      {\n          name:\"Bangalore International Airport Limited\",\n          city:\"Bengaluru\",\n          id:\"BEN\",\n          country:\"India\"\n      },\n      {\n          name:\"Cochin International Airport\",\n          city:\"Kochi\",\n          id:\"CCP\",\n          country:\"India\"\n      },\n      {\n          name:\"Bharat Ratna Babasaheb Dr. B.R. Ambedkar International Airport\",\n          city:\"Nagpur\",\n          id:\"CCQ\",\n          country:\"India\"\n      },\n\n  ]\n  const [departure, setDeparture] = useState('')\n  const [arrival, setArrival] = useState('')\n  const [filter, setFilter] = useState(Airports)\n\n  const onChangeArrival = (e) => {\n      setArrival(e.target.value)\n      filterDest(e.target.value)\n  }\n  const onChangeDeparture = (e) => {\n      setDeparture(e.target.value)\n      filterDest(e.target.value)\n  }\n  const filterDest = (value) =>{\n      const result = Airports.filter((element)=> {\n          const {name,city} = element\n          var cityfilter = city.toLowerCase()\n          var namefilter = name.toLowerCase()\n          if(cityfilter.indexOf(value.toLowerCase()) > -1 || namefilter.indexOf(value.toLowerCase()) > -1){\n              return element\n          }\n      })\n    setFilter(result)\n  }\n\n\n  //\n\n\n\n    const getFlights = async(from,to,departuredate) => {\n        const response = await fetch(`${host}/api/v1/flights?from=${from}&to=${to}&departuredate=${departuredate}`, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n            }\n        });\n        const json = await response.json()\n        setflights(json.flights)\n    }   \n\n  return (\n    <flightContent.Provider value={{departure, setDeparture, arrival, setArrival ,filter, Airports, flights, filterDest, onChangeDeparture, onChangeArrival, getFlights}}>\n        {props.children}\n    </flightContent.Provider>\n  )\n}\n\nexport default FlightState\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}