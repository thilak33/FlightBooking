{"ast":null,"code":"var _jsxFileName = \"/Users/thilakvoruganti/Desktop/FlightBooking/src/pages/BookingSummary.js\";\n// import React,{useContext,useEffect,useState,useRef} from 'react'\n// import '../styles/BookingSummary.css'\n// import flightContent from \"../context/FlightContext\";\n// import '../styles/BookingSummary.css'\n// import { useNavigate } from 'react-router-dom';\n// import * as moment from 'moment';\n\n// const BookingSummary = () => {\n//     const host = \"http://localhost:4000\"\n//     const content = useContext(flightContent)\n//     const { bookingstatus, setBookingStatus,tripFlights,setTripFlights,\n//         setSearchFlights,setSearchDate,searchdate, searchflights, primarypassenger,setPrimarypassenger, pwcd,setPwcd,setCondition,updateSearchFlights\n//         ,historyobject\n//         } = content \n\n//     const alertBtn = useRef()\n//     const navigate = useNavigate()\n\n//     const [isBSBackButtonClicked, setIsBSBackButtonClicked] = useState(false)\n\n//     const onBSBackButtonEvent = (e) => {\n//         e.preventDefault();\n//         if(!isBSBackButtonClicked){\n//             let sf = JSON.parse(localStorage.getItem('searchflights'))\n//             if(sf[2].tripValue === 'One-way'){\n//                 updateSearchFlights(3,moment(sf[3]))\n//                 setIsBSBackButtonClicked(true)\n//                 navigate('/')\n//             }\n//                 if(sf[2].tripValue === 'Return'){\n//                 let startDate = moment(sf[4].startDate)\n//                 let endDate = moment(sf[4].endDate)\n//                 updateSearchFlights(4,{startDate,endDate})\n//                 setIsBSBackButtonClicked(true)\n//                 navigate('/')\n//             }   \n//             navigate('/')\n//         }\n//     }   \n\n//     useEffect(() => {\n//         setSearchDate(localStorage.getItem('searchdate'))\n//         setTripFlights(JSON.parse(localStorage.getItem('tripFlights')))\n//         setSearchFlights(JSON.parse(localStorage.getItem('searchflights')))\n//         setPwcd(JSON.parse(localStorage.getItem('pwcd')))\n//         setPrimarypassenger(localStorage.getItem('primarypassenger'))\n\n//         window.history.pushState(historyobject, null, window.location.pathname);\n//         window.addEventListener('popstate', onBSBackButtonEvent);\n//     }, [])\n\n//     const totalPrice = () => {\n//         if(searchflights[5].passengerClass === 'Economy'){\n//             if(searchflights[2].tripValue === 'One-way'){\n//                 return tripFlights[0].economyprice*(searchflights[5].passengerCount-searchflights[5].infantCount)\n//             }\n//             if(searchflights[2].tripValue === 'Return'){\n//                 return (tripFlights[0].economyprice+tripFlights[1].economyprice)*(searchflights[5].passengerCount-searchflights[5].infantCount)\n//             }\n//         } \n//         if(searchflights[5].passengerClass === 'Premium'){\n//             if(searchflights[2].tripValue === 'One-way'){\n//                 return tripFlights[0].premiumprice*(searchflights[5].passengerCount-searchflights[5].infantCount)\n//             }\n//             if(searchflights[2].tripValue === 'Return'){\n//                 return (tripFlights[0].premiumprice+tripFlights[1].premiumprice)*(searchflights[5].passengerCount-searchflights[5].infantCount)\n//             }\n//         } \n//     }\n//     const bookandpay= async () => {\n//             if(localStorage.getItem('token')){\n//                 const response = await fetch(`${host}/api/v1/auth/bookflight`,{\n//                     method:'POST',\n//                     headers:{\n//                         'Content-type':'application/json',\n//                         'auth-token':localStorage.getItem('token')\n\n//                     },\n//                     body: JSON.stringify({ \n//                                     triptype: searchflights[2].tripValue,\n//                                     tripclass: searchflights[5].passengerClass,\n//                                     totalprice: searchflights[2].tripValue === 'Return' ? (searchflights[5].passengerCount - searchflights[5].infantCount) * (searchflights[5].passengerClass === 'Economy' ? tripFlights[0].economyprice + tripFlights[1].economyprice : tripFlights[0].premiumprice + tripFlights[1].premiumprice) : (searchflights[5].passengerCount - searchflights[5].infantCount) * (searchflights[5].passengerClass === 'Economy' ? tripFlights[0].economyprice : tripFlights[0].premiumprice),\n//                                     flightname:tripFlights[0].flightname,\n//                                     flightnumber:tripFlights[0].flightnumber,\n//                                     departure:tripFlights[0].departure,\n//                                     departuretime:tripFlights[0].departuretime,\n//                                     departuredate: searchflights[2].tripValue === 'Return' ?searchdate.slice(0,11):searchdate,\n//                                     departureairport:tripFlights[0].departureairport,\n//                                     departurecode:tripFlights[0].departurecode,\n//                                     destination:tripFlights[0].destination,\n//                                     destinationtime:tripFlights[0].destinationtime,\n//                                     destinationairport:tripFlights[0].destinationairport,\n//                                     destinationcode:tripFlights[0].destinationcode,\n//                                     rflightname:tripFlights[1].flightname,\n//                                     rflightnumber:tripFlights[1].flightnumber,\n//                                     rdeparture:tripFlights[1].departure,\n//                                     rdeparturetime:tripFlights[1].departuretime,\n//                                     rdeparturedate:searchdate.slice(14,25),\n//                                     rdepartureairport:tripFlights[1].departureairport,\n//                                     rdeparturecode:tripFlights[1].departurecode,\n//                                     rdestination:tripFlights[1].destination,\n//                                     rdestinationtime:tripFlights[1].destinationtime,\n//                                     rdestinationairport:tripFlights[1].destinationairport,\n//                                     rdestinationcode:tripFlights[1].destinationcode\n//                         })\n//                 })\n//                 const booked = await response.json()\n//                 if(booked.success){\n//                     for (let i=0;i<pwcd.length;i++){\n//                         const psopt = []\n//                         let bookpass = await fetch(`${host}/api/v1/auth/createpassenger`,{\n//                         method:'POST',\n//                         headers:{\n//                             'Content-type':'application/json',\n//                             'auth-token':localStorage.getItem('token')\n//                         },\n//                         body: JSON.stringify({ \n//                                     firstname:pwcd[i].firstname,\n//                                     lastname:pwcd[i].lastname,\n//                                     gender:pwcd[i].gender,\n//                                     nationality:pwcd[i].nationality,\n//                                     dateofbirth:pwcd[i].dateofbirth,\n//                                     passport:pwcd[i].passport,\n//                                     passportexpirydate:pwcd[i].passportexpirydate,\n//                                     mobilenumber:pwcd[i].mobilenumber,\n//                                     email:pwcd[i].email,\n//                                     bookingid:booked.booking._id\n//                             })\n//                         })\n//                         psopt[i] = await bookpass.json()\n//                         if(psopt[i].passenger.success !== true){\n//                             setBookingStatus(true)\n//                         }\n//                     }\n//                 }\n//                 if(booked.success !== true){\n//                     setBookingStatus(true)\n//                 }\n//                 if(booked.success && !bookingstatus){\n//                     localStorage.setItem('BookingID',booked.booking._id)\n//                 }\n//                 localStorage.removeItem('bookingstatus')\n//                 localStorage.setItem('bookingstatus',bookingstatus)\n//                 navigate('/confirmation') \n//             }\n//             else{\n//                 const response = await fetch(`${host}/api/v1/bookflight`,{\n//                     method:'POST',\n//                     headers:{\n//                         'Content-type':'application/json',\n//                     },\n//                     body: JSON.stringify({ \n//                                     triptype: searchflights[2].tripValue,\n//                                     tripclass: searchflights[5].passengerClass,\n//                                     totalprice: totalPrice(),\n//                                     flightname:tripFlights[0].flightname,\n//                                     flightnumber:tripFlights[0].flightnumber,\n//                                     departure: tripFlights[0].departure,\n//                                     departuretime:tripFlights[0].departuretime,\n//                                     departuredate: searchdate.slice(0,11),\n//                                     departureairport:tripFlights[0].departureairport,\n//                                     departurecode:tripFlights[0].departurecode,\n//                                     destination:tripFlights[0].destination,\n//                                     destinationtime:tripFlights[0].destinationtime,\n//                                     destinationairport:tripFlights[0].destinationairport,\n//                                     destinationcode:tripFlights[0].destinationcode,\n//                                     rflightname:tripFlights[1].flightname,\n//                                     rflightnumber:tripFlights[1].flightnumber,\n//                                     rdeparture:tripFlights[1].departure,\n//                                     rdeparturetime:tripFlights[1].departuretime,\n//                                     rdeparturedate:searchdate.slice(14,25),\n//                                     rdepartureairport:tripFlights[1].departureairport,\n//                                     rdeparturecode:tripFlights[1].departurecode,\n//                                     rdestination:tripFlights[1].destination,\n//                                     rdestinationtime:tripFlights[1].destinationtime,\n//                                     rdestinationairport:tripFlights[1].destinationairport,\n//                                     rdestinationcode:tripFlights[1].destinationcode\n//                         })\n//                 })\n//                 const booked = await response.json()\n//                 console.log(booked.success)\n//                 if(booked.success){\n//                     for (var i=0;i<pwcd.length;i++){\n//                         const psopt = []\n//                         let bookpass = await fetch(`${host}/api/v1/createpassenger`,{\n//                         method:'POST',\n//                         headers:{\n//                             'Content-type':'application/json',\n//                         },\n//                         body: JSON.stringify({ \n//                                     firstname:pwcd[i].firstname,\n//                                     lastname:pwcd[i].lastname,\n//                                     gender:pwcd[i].gender,\n//                                     nationality:pwcd[i].nationality,\n//                                     passport:pwcd[i].passport,\n//                                     passportexpirydate:pwcd[i].passportexpirydate,\n//                                     mobilenumber:pwcd[i].mobilenumber,\n//                                     email:pwcd[i].email,\n//                                     bookingid:booked.booking._id\n//                             })\n//                         })\n//                         psopt[i] = await bookpass.json()\n//                         if(psopt[i].passenger.success !== true){\n//                             console.log(psopt[i].passenger.success)\n//                             setBookingStatus(true)\n//                         }\n//                     }\n//                 }\n//                 else{\n//                     setBookingStatus(true)\n//                 }\n//                 if(booked.success && !bookingstatus){\n//                     localStorage.setItem('BookingID',booked.booking._id)\n//                 }\n//                 localStorage.removeItem('bookingstatus')\n//                 localStorage.setItem('bookingstatus',bookingstatus)\n//                 navigate('/confirmation')\n//             }\n\n//     }\n\n//   return (\n//     <div className='book-sum-con'>\n//         <div className='bsc-title'>Trip Summary</div>\n//         <div className='fpc-con'>\n//             {/* <div className='ts-header'>\n//                 <div className='ts-title'>Trip summary</div>\n//             </div> */}\n//             <div className='ts-body'>\n//                     {tripFlights.slice(0,searchflights[2].tripValue==='Return'?tripFlights.length:1).map((flight,i)=>{\n//                     return  <div className='fd-con'>\n//                                 <div className='ts-t-m'>Outbound flight</div>\n//                                 <div className='fd-con-header'>\n//                                     <div className='ts-i-xl'>{flight.departure}</div>\n//                                     <div className='ts-arrow'>&#8594;</div>\n//                                     <div className='ts-i-xl'>{flight.destination}</div>\n//                                     <div className='ts-i-m ts-t-m-p'>{i === 1?searchdate.slice(14,25):searchflights[2].tripValue==='Return'?searchdate.slice(0,11):searchdate}</div>\n//                                 </div>\n//                                 <div className='fd-con-body'>\n//                                     <div className='ts-i-m table-h'>Departure</div>\n//                                     <div className='ts-i-m table-h'></div>\n//                                     <div className='ts-i-m table-h'>Arrival</div>\n//                                     <div className='ts-i-m table-h'>Operated by</div>\n//                                     <div className='ts-i-m table-h'>Class</div>\n//                                     <div className='ts-i-l-b'>{flight.departuretime+' '+flight.departurecode}</div>\n//                                     <div></div>\n//                                     <div className='ts-i-l-b'>{flight.destinationtime+' '+flight.destinationcode}</div>\n//                                     <div className='ts-i-l'>{flight.flightname}</div>\n//                                     <div className='ts-i-l'>{searchflights[5].passengerClass}</div>\n//                                     <div className='ts-i-m'>{flight.departure+', '+flight.departureairport}</div>\n//                                     <div className='ts-i-m text-center'>Non-stop</div>\n//                                     <div className='ts-i-m'>{flight.destination+', '+flight.destinationairport}</div>\n//                                     <div></div>\n//                                     <div></div>\n//                                 </div>\n//                             </div>\n//                     })}\n//                     <div className='ts-i-xl ts-i-h-p'>Passenger Details</div>\n//                     <div className='pd-con'>\n//                         <div className='ts-i-m table-h'>Passenger name</div>\n//                         <div className='ts-i-m table-h'>Passport</div>\n//                         <div className='ts-i-m table-h'>Date of birth</div>\n//                         <div className='ts-i-m table-h'>Type</div>\n//                         {pwcd.map((element)=>{\n//                             const {firstname,lastname,passport,dateofbirth,type} = element\n//                         return  <>\n//                                     <div className='ts-i-l table-d'>{firstname+' '+lastname}</div>\n//                                     <div className='ts-i-l table-d'>{passport?passport:'-'}</div>\n//                                     <div className='ts-i-l table-d'>{dateofbirth}</div>\n//                                     <div className='ts-i-l table-d'>{type}</div>\n//                                 </>\n//                         })}\n//                     </div>\n//                     <div className='ts-i-xl ts-i-h-p'>Contact Details</div>\n//                     <div className='cd-con'>\n//                         <div className='ts-i-m table-h'>Passenger name</div>\n//                         <div className='ts-i-m table-h'>Type</div>\n//                         <div className='ts-i-m table-h'>Email</div>\n//                         <div className='ts-i-m table-h'>Number</div>\n//                         {pwcd.map((element)=>{\n//                             if(element.firstname+' '+element.lastname === primarypassenger){\n//                         return  <>\n//                                     <div className='ts-i-l'>{element.firstname+' '+element.lastname}</div>\n//                                     <div className='ts-i-l'>Primary</div>\n//                                     <div className='ts-i-l'>{element.email}</div>\n//                                     <div className='ts-i-l'>{element.mobilenumber}</div>\n//                                 </>\n//                             }\n//                         })}\n//                     </div>\n//             </div>\n//         </div>\n//         <div className='bsc-title'>Total price</div>\n//         <div className='ts-footer'>\n//                 <div className='d-flex justify-content-between'>\n//                     <div className='ts-i-m'>Trip price</div>\n//                     <div className='ts-i-m'>INR {totalPrice()}</div>\n//                 </div>\n//                 <div className='ts-i-m'>&#40;{searchflights[5].adultCount?<>{searchflights[5].adultCount} Adult</>:''}{searchflights[5].childCount?<>+{searchflights[5].childCount}Child</>:''}{searchflights[5].infantCount?<>+{searchflights[5].infantCount}Infant</>:''}&#41;</div>\n//                 <div className='pa-con'>\n//                     <div className='ts-i-l-b'>Payable Amount:</div>\n//                     <div className='ts-i-l-b'>INR {totalPrice()}</div>\n//                 </div>\n//         </div>\n//         <div className='d-flex justify-content-around'>\n//                     <button onClick={bookandpay} className='prcd-btn'>Book and Pay</button>\n//                 </div>\n//     </div>\n//   )\n// }\n\n// export default BookingSummary\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingSummary = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"BookingSummary\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 5\n  }, this);\n};\n_c = BookingSummary;\nexport default BookingSummary;\nvar _c;\n$RefreshReg$(_c, \"BookingSummary\");","map":{"version":3,"names":["React","BookingSummary"],"sources":["/Users/thilakvoruganti/Desktop/FlightBooking/src/pages/BookingSummary.js"],"sourcesContent":["// import React,{useContext,useEffect,useState,useRef} from 'react'\n// import '../styles/BookingSummary.css'\n// import flightContent from \"../context/FlightContext\";\n// import '../styles/BookingSummary.css'\n// import { useNavigate } from 'react-router-dom';\n// import * as moment from 'moment';\n\n// const BookingSummary = () => {\n//     const host = \"http://localhost:4000\"\n//     const content = useContext(flightContent)\n//     const { bookingstatus, setBookingStatus,tripFlights,setTripFlights,\n//         setSearchFlights,setSearchDate,searchdate, searchflights, primarypassenger,setPrimarypassenger, pwcd,setPwcd,setCondition,updateSearchFlights\n//         ,historyobject\n//         } = content \n\n        \n//     const alertBtn = useRef()\n//     const navigate = useNavigate()\n    \n//     const [isBSBackButtonClicked, setIsBSBackButtonClicked] = useState(false)\n    \n//     const onBSBackButtonEvent = (e) => {\n//         e.preventDefault();\n//         if(!isBSBackButtonClicked){\n//             let sf = JSON.parse(localStorage.getItem('searchflights'))\n//             if(sf[2].tripValue === 'One-way'){\n//                 updateSearchFlights(3,moment(sf[3]))\n//                 setIsBSBackButtonClicked(true)\n//                 navigate('/')\n//             }\n//                 if(sf[2].tripValue === 'Return'){\n//                 let startDate = moment(sf[4].startDate)\n//                 let endDate = moment(sf[4].endDate)\n//                 updateSearchFlights(4,{startDate,endDate})\n//                 setIsBSBackButtonClicked(true)\n//                 navigate('/')\n//             }   \n//             navigate('/')\n//         }\n//     }   \n    \n\n\n//     useEffect(() => {\n//         setSearchDate(localStorage.getItem('searchdate'))\n//         setTripFlights(JSON.parse(localStorage.getItem('tripFlights')))\n//         setSearchFlights(JSON.parse(localStorage.getItem('searchflights')))\n//         setPwcd(JSON.parse(localStorage.getItem('pwcd')))\n//         setPrimarypassenger(localStorage.getItem('primarypassenger'))\n\n//         window.history.pushState(historyobject, null, window.location.pathname);\n//         window.addEventListener('popstate', onBSBackButtonEvent);\n//     }, [])\n      \n\n\n//     const totalPrice = () => {\n//         if(searchflights[5].passengerClass === 'Economy'){\n//             if(searchflights[2].tripValue === 'One-way'){\n//                 return tripFlights[0].economyprice*(searchflights[5].passengerCount-searchflights[5].infantCount)\n//             }\n//             if(searchflights[2].tripValue === 'Return'){\n//                 return (tripFlights[0].economyprice+tripFlights[1].economyprice)*(searchflights[5].passengerCount-searchflights[5].infantCount)\n//             }\n//         } \n//         if(searchflights[5].passengerClass === 'Premium'){\n//             if(searchflights[2].tripValue === 'One-way'){\n//                 return tripFlights[0].premiumprice*(searchflights[5].passengerCount-searchflights[5].infantCount)\n//             }\n//             if(searchflights[2].tripValue === 'Return'){\n//                 return (tripFlights[0].premiumprice+tripFlights[1].premiumprice)*(searchflights[5].passengerCount-searchflights[5].infantCount)\n//             }\n//         } \n//     }\n//     const bookandpay= async () => {\n//             if(localStorage.getItem('token')){\n//                 const response = await fetch(`${host}/api/v1/auth/bookflight`,{\n//                     method:'POST',\n//                     headers:{\n//                         'Content-type':'application/json',\n//                         'auth-token':localStorage.getItem('token')\n    \n//                     },\n//                     body: JSON.stringify({ \n//                                     triptype: searchflights[2].tripValue,\n//                                     tripclass: searchflights[5].passengerClass,\n//                                     totalprice: searchflights[2].tripValue === 'Return' ? (searchflights[5].passengerCount - searchflights[5].infantCount) * (searchflights[5].passengerClass === 'Economy' ? tripFlights[0].economyprice + tripFlights[1].economyprice : tripFlights[0].premiumprice + tripFlights[1].premiumprice) : (searchflights[5].passengerCount - searchflights[5].infantCount) * (searchflights[5].passengerClass === 'Economy' ? tripFlights[0].economyprice : tripFlights[0].premiumprice),\n//                                     flightname:tripFlights[0].flightname,\n//                                     flightnumber:tripFlights[0].flightnumber,\n//                                     departure:tripFlights[0].departure,\n//                                     departuretime:tripFlights[0].departuretime,\n//                                     departuredate: searchflights[2].tripValue === 'Return' ?searchdate.slice(0,11):searchdate,\n//                                     departureairport:tripFlights[0].departureairport,\n//                                     departurecode:tripFlights[0].departurecode,\n//                                     destination:tripFlights[0].destination,\n//                                     destinationtime:tripFlights[0].destinationtime,\n//                                     destinationairport:tripFlights[0].destinationairport,\n//                                     destinationcode:tripFlights[0].destinationcode,\n//                                     rflightname:tripFlights[1].flightname,\n//                                     rflightnumber:tripFlights[1].flightnumber,\n//                                     rdeparture:tripFlights[1].departure,\n//                                     rdeparturetime:tripFlights[1].departuretime,\n//                                     rdeparturedate:searchdate.slice(14,25),\n//                                     rdepartureairport:tripFlights[1].departureairport,\n//                                     rdeparturecode:tripFlights[1].departurecode,\n//                                     rdestination:tripFlights[1].destination,\n//                                     rdestinationtime:tripFlights[1].destinationtime,\n//                                     rdestinationairport:tripFlights[1].destinationairport,\n//                                     rdestinationcode:tripFlights[1].destinationcode\n//                         })\n//                 })\n//                 const booked = await response.json()\n//                 if(booked.success){\n//                     for (let i=0;i<pwcd.length;i++){\n//                         const psopt = []\n//                         let bookpass = await fetch(`${host}/api/v1/auth/createpassenger`,{\n//                         method:'POST',\n//                         headers:{\n//                             'Content-type':'application/json',\n//                             'auth-token':localStorage.getItem('token')\n//                         },\n//                         body: JSON.stringify({ \n//                                     firstname:pwcd[i].firstname,\n//                                     lastname:pwcd[i].lastname,\n//                                     gender:pwcd[i].gender,\n//                                     nationality:pwcd[i].nationality,\n//                                     dateofbirth:pwcd[i].dateofbirth,\n//                                     passport:pwcd[i].passport,\n//                                     passportexpirydate:pwcd[i].passportexpirydate,\n//                                     mobilenumber:pwcd[i].mobilenumber,\n//                                     email:pwcd[i].email,\n//                                     bookingid:booked.booking._id\n//                             })\n//                         })\n//                         psopt[i] = await bookpass.json()\n//                         if(psopt[i].passenger.success !== true){\n//                             setBookingStatus(true)\n//                         }\n//                     }\n//                 }\n//                 if(booked.success !== true){\n//                     setBookingStatus(true)\n//                 }\n//                 if(booked.success && !bookingstatus){\n//                     localStorage.setItem('BookingID',booked.booking._id)\n//                 }\n//                 localStorage.removeItem('bookingstatus')\n//                 localStorage.setItem('bookingstatus',bookingstatus)\n//                 navigate('/confirmation') \n//             }\n//             else{\n//                 const response = await fetch(`${host}/api/v1/bookflight`,{\n//                     method:'POST',\n//                     headers:{\n//                         'Content-type':'application/json',\n//                     },\n//                     body: JSON.stringify({ \n//                                     triptype: searchflights[2].tripValue,\n//                                     tripclass: searchflights[5].passengerClass,\n//                                     totalprice: totalPrice(),\n//                                     flightname:tripFlights[0].flightname,\n//                                     flightnumber:tripFlights[0].flightnumber,\n//                                     departure: tripFlights[0].departure,\n//                                     departuretime:tripFlights[0].departuretime,\n//                                     departuredate: searchdate.slice(0,11),\n//                                     departureairport:tripFlights[0].departureairport,\n//                                     departurecode:tripFlights[0].departurecode,\n//                                     destination:tripFlights[0].destination,\n//                                     destinationtime:tripFlights[0].destinationtime,\n//                                     destinationairport:tripFlights[0].destinationairport,\n//                                     destinationcode:tripFlights[0].destinationcode,\n//                                     rflightname:tripFlights[1].flightname,\n//                                     rflightnumber:tripFlights[1].flightnumber,\n//                                     rdeparture:tripFlights[1].departure,\n//                                     rdeparturetime:tripFlights[1].departuretime,\n//                                     rdeparturedate:searchdate.slice(14,25),\n//                                     rdepartureairport:tripFlights[1].departureairport,\n//                                     rdeparturecode:tripFlights[1].departurecode,\n//                                     rdestination:tripFlights[1].destination,\n//                                     rdestinationtime:tripFlights[1].destinationtime,\n//                                     rdestinationairport:tripFlights[1].destinationairport,\n//                                     rdestinationcode:tripFlights[1].destinationcode\n//                         })\n//                 })\n//                 const booked = await response.json()\n//                 console.log(booked.success)\n//                 if(booked.success){\n//                     for (var i=0;i<pwcd.length;i++){\n//                         const psopt = []\n//                         let bookpass = await fetch(`${host}/api/v1/createpassenger`,{\n//                         method:'POST',\n//                         headers:{\n//                             'Content-type':'application/json',\n//                         },\n//                         body: JSON.stringify({ \n//                                     firstname:pwcd[i].firstname,\n//                                     lastname:pwcd[i].lastname,\n//                                     gender:pwcd[i].gender,\n//                                     nationality:pwcd[i].nationality,\n//                                     passport:pwcd[i].passport,\n//                                     passportexpirydate:pwcd[i].passportexpirydate,\n//                                     mobilenumber:pwcd[i].mobilenumber,\n//                                     email:pwcd[i].email,\n//                                     bookingid:booked.booking._id\n//                             })\n//                         })\n//                         psopt[i] = await bookpass.json()\n//                         if(psopt[i].passenger.success !== true){\n//                             console.log(psopt[i].passenger.success)\n//                             setBookingStatus(true)\n//                         }\n//                     }\n//                 }\n//                 else{\n//                     setBookingStatus(true)\n//                 }\n//                 if(booked.success && !bookingstatus){\n//                     localStorage.setItem('BookingID',booked.booking._id)\n//                 }\n//                 localStorage.removeItem('bookingstatus')\n//                 localStorage.setItem('bookingstatus',bookingstatus)\n//                 navigate('/confirmation')\n//             }\n   \n//     }\n\n//   return (\n//     <div className='book-sum-con'>\n//         <div className='bsc-title'>Trip Summary</div>\n//         <div className='fpc-con'>\n//             {/* <div className='ts-header'>\n//                 <div className='ts-title'>Trip summary</div>\n//             </div> */}\n//             <div className='ts-body'>\n//                     {tripFlights.slice(0,searchflights[2].tripValue==='Return'?tripFlights.length:1).map((flight,i)=>{\n//                     return  <div className='fd-con'>\n//                                 <div className='ts-t-m'>Outbound flight</div>\n//                                 <div className='fd-con-header'>\n//                                     <div className='ts-i-xl'>{flight.departure}</div>\n//                                     <div className='ts-arrow'>&#8594;</div>\n//                                     <div className='ts-i-xl'>{flight.destination}</div>\n//                                     <div className='ts-i-m ts-t-m-p'>{i === 1?searchdate.slice(14,25):searchflights[2].tripValue==='Return'?searchdate.slice(0,11):searchdate}</div>\n//                                 </div>\n//                                 <div className='fd-con-body'>\n//                                     <div className='ts-i-m table-h'>Departure</div>\n//                                     <div className='ts-i-m table-h'></div>\n//                                     <div className='ts-i-m table-h'>Arrival</div>\n//                                     <div className='ts-i-m table-h'>Operated by</div>\n//                                     <div className='ts-i-m table-h'>Class</div>\n//                                     <div className='ts-i-l-b'>{flight.departuretime+' '+flight.departurecode}</div>\n//                                     <div></div>\n//                                     <div className='ts-i-l-b'>{flight.destinationtime+' '+flight.destinationcode}</div>\n//                                     <div className='ts-i-l'>{flight.flightname}</div>\n//                                     <div className='ts-i-l'>{searchflights[5].passengerClass}</div>\n//                                     <div className='ts-i-m'>{flight.departure+', '+flight.departureairport}</div>\n//                                     <div className='ts-i-m text-center'>Non-stop</div>\n//                                     <div className='ts-i-m'>{flight.destination+', '+flight.destinationairport}</div>\n//                                     <div></div>\n//                                     <div></div>\n//                                 </div>\n//                             </div>\n//                     })}\n//                     <div className='ts-i-xl ts-i-h-p'>Passenger Details</div>\n//                     <div className='pd-con'>\n//                         <div className='ts-i-m table-h'>Passenger name</div>\n//                         <div className='ts-i-m table-h'>Passport</div>\n//                         <div className='ts-i-m table-h'>Date of birth</div>\n//                         <div className='ts-i-m table-h'>Type</div>\n//                         {pwcd.map((element)=>{\n//                             const {firstname,lastname,passport,dateofbirth,type} = element\n//                         return  <>\n//                                     <div className='ts-i-l table-d'>{firstname+' '+lastname}</div>\n//                                     <div className='ts-i-l table-d'>{passport?passport:'-'}</div>\n//                                     <div className='ts-i-l table-d'>{dateofbirth}</div>\n//                                     <div className='ts-i-l table-d'>{type}</div>\n//                                 </>\n//                         })}\n//                     </div>\n//                     <div className='ts-i-xl ts-i-h-p'>Contact Details</div>\n//                     <div className='cd-con'>\n//                         <div className='ts-i-m table-h'>Passenger name</div>\n//                         <div className='ts-i-m table-h'>Type</div>\n//                         <div className='ts-i-m table-h'>Email</div>\n//                         <div className='ts-i-m table-h'>Number</div>\n//                         {pwcd.map((element)=>{\n//                             if(element.firstname+' '+element.lastname === primarypassenger){\n//                         return  <>\n//                                     <div className='ts-i-l'>{element.firstname+' '+element.lastname}</div>\n//                                     <div className='ts-i-l'>Primary</div>\n//                                     <div className='ts-i-l'>{element.email}</div>\n//                                     <div className='ts-i-l'>{element.mobilenumber}</div>\n//                                 </>\n//                             }\n//                         })}\n//                     </div>\n//             </div>\n//         </div>\n//         <div className='bsc-title'>Total price</div>\n//         <div className='ts-footer'>\n//                 <div className='d-flex justify-content-between'>\n//                     <div className='ts-i-m'>Trip price</div>\n//                     <div className='ts-i-m'>INR {totalPrice()}</div>\n//                 </div>\n//                 <div className='ts-i-m'>&#40;{searchflights[5].adultCount?<>{searchflights[5].adultCount} Adult</>:''}{searchflights[5].childCount?<>+{searchflights[5].childCount}Child</>:''}{searchflights[5].infantCount?<>+{searchflights[5].infantCount}Infant</>:''}&#41;</div>\n//                 <div className='pa-con'>\n//                     <div className='ts-i-l-b'>Payable Amount:</div>\n//                     <div className='ts-i-l-b'>INR {totalPrice()}</div>\n//                 </div>\n//         </div>\n//         <div className='d-flex justify-content-around'>\n//                     <button onClick={bookandpay} className='prcd-btn'>Book and Pay</button>\n//                 </div>\n//     </div>\n//   )\n// }\n\n// export default BookingSummary\n\nimport React from 'react'\n\nconst BookingSummary = () => {\n  return (\n    <div>BookingSummary</div>\n  )\n}\n\nexport default BookingSummary\n\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAEzB,MAAMC,cAAc,GAAG,MAAM;EAC3B,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAyB;AAE7B,CAAC;AAAA,KAJKA,cAAc;AAMpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module"}