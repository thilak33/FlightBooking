{"ast":null,"code":"var _jsxFileName = \"/Users/thilakvoruganti/Desktop/FlightBooking/src/components/Input.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../styles/Components.css';\nimport Alert from './Alert';\nimport { useFlight } from '../context/Flight';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Input = _ref => {\n  _s();\n  let {\n    className,\n    placeholder,\n    onChange,\n    value,\n    type,\n    name,\n    id,\n    validation,\n    alertmsg\n  } = _ref;\n  const {\n    alert,\n    setAlert,\n    invalid,\n    setInvalid\n  } = useFlight();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-com\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-floating\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: `input-${className} form-control ${invalid[name]}`,\n        placeholder: placeholder,\n        onChange: onChange,\n        value: value,\n        type: type,\n        name: name,\n        id: id,\n        onBlur: () => {\n          if (name !== 'cpassword') {\n            var pattern = new RegExp(validation);\n            let regex = pattern.test(value);\n            setAlert({\n              ...alert,\n              [name]: regex\n            });\n            setInvalid({\n              ...invalid,\n              [name]: regex ? '' : 'is-invalid'\n            });\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: `input-label-primary`,\n        htmlFor: id,\n        children: placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), alert[name] === false ? /*#__PURE__*/_jsxDEV(Alert, {\n      primary: className,\n      error: alertmsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(Input, \"W2jH2kQCLVsPEr5vqZX/fOdIfIc=\", false, function () {\n  return [useFlight];\n});\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","Alert","useFlight","Input","className","placeholder","onChange","value","type","name","id","validation","alertmsg","alert","setAlert","invalid","setInvalid","pattern","RegExp","regex","test"],"sources":["/Users/thilakvoruganti/Desktop/FlightBooking/src/components/Input.js"],"sourcesContent":["import React from 'react'\nimport '../styles/Components.css'\nimport Alert from './Alert'\nimport { useFlight } from '../context/Flight'\n\n\nconst Input = ({className,placeholder,onChange, value, type, name, id, validation, alertmsg}) => {\n\n    const {alert, setAlert, invalid, setInvalid} = useFlight()\n\n\n    return (\n        <div className='input-com'>\n            <div className=\"form-floating\">\n                <input \n                    className={`input-${className} form-control ${invalid[name]}`}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    value={value}\n                    type={type}\n                    name={name}\n                    id={id}\n                    onBlur={() => {\n                            if(name !== 'cpassword'){\n                                var pattern = new RegExp(validation);\n                                let regex = pattern.test(value)\n                                setAlert({...alert,[name]:regex})\n                                setInvalid({...invalid,[name]:regex ? '' : 'is-invalid'})\n                            }\n                        }\n                    }\n                />\n                <label className={`input-label-primary`} htmlFor={id}>{placeholder}</label>\n            </div>\n            {alert[name] === false ? <Alert primary={className} error={alertmsg} /> : <></>}\n        </div>\n    )\n}\n\nexport default Input"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B;AACjC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,SAAS,QAAQ,mBAAmB;AAAA;AAAA;AAG7C,MAAMC,KAAK,GAAG,QAAmF;EAAA;EAAA,IAAlF;IAACC,SAAS;IAACC,WAAW;IAACC,QAAQ;IAAEC,KAAK;IAAEC,IAAI;IAAEC,IAAI;IAAEC,EAAE;IAAEC,UAAU;IAAEC;EAAQ,CAAC;EAExF,MAAM;IAACC,KAAK;IAAEC,QAAQ;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAGd,SAAS,EAAE;EAG1D,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,wBACtB;MAAK,SAAS,EAAC,eAAe;MAAA,wBAC1B;QACI,SAAS,EAAG,SAAQE,SAAU,iBAAgBW,OAAO,CAACN,IAAI,CAAE,EAAE;QAC9D,WAAW,EAAEJ,WAAY;QACzB,QAAQ,EAAEC,QAAS;QACnB,KAAK,EAAEC,KAAM;QACb,IAAI,EAAEC,IAAK;QACX,IAAI,EAAEC,IAAK;QACX,EAAE,EAAEC,EAAG;QACP,MAAM,EAAE,MAAM;UACN,IAAGD,IAAI,KAAK,WAAW,EAAC;YACpB,IAAIQ,OAAO,GAAG,IAAIC,MAAM,CAACP,UAAU,CAAC;YACpC,IAAIQ,KAAK,GAAGF,OAAO,CAACG,IAAI,CAACb,KAAK,CAAC;YAC/BO,QAAQ,CAAC;cAAC,GAAGD,KAAK;cAAC,CAACJ,IAAI,GAAEU;YAAK,CAAC,CAAC;YACjCH,UAAU,CAAC;cAAC,GAAGD,OAAO;cAAC,CAACN,IAAI,GAAEU,KAAK,GAAG,EAAE,GAAG;YAAY,CAAC,CAAC;UAC7D;QACJ;MACH;QAAA;QAAA;QAAA;MAAA,QACH,eACF;QAAO,SAAS,EAAG,qBAAqB;QAAC,OAAO,EAAET,EAAG;QAAA,UAAEL;MAAW;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACzE,EACLQ,KAAK,CAACJ,IAAI,CAAC,KAAK,KAAK,gBAAG,QAAC,KAAK;MAAC,OAAO,EAAEL,SAAU;MAAC,KAAK,EAAEQ;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,gBAAG,qCAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAC7E;AAEd,CAAC;AAAA,GA/BKT,KAAK;EAAA,QAEwCD,SAAS;AAAA;AAAA,KAFtDC,KAAK;AAiCX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module"}